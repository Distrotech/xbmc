<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="classXBMCAddon_1_1xbmcgui_1_1Control" kind="class" prot="public">
    <compoundname>XBMCAddon::xbmcgui::Control</compoundname>
    <basecompoundref refid="classXBMCAddon_1_1AddonClass" prot="public" virt="non-virtual">XBMCAddon::AddonClass</basecompoundref>
    <derivedcompoundref refid="classXBMCAddon_1_1xbmcgui_1_1ControlButton" prot="public" virt="non-virtual">XBMCAddon::xbmcgui::ControlButton</derivedcompoundref>
    <derivedcompoundref refid="classXBMCAddon_1_1xbmcgui_1_1ControlCheckMark" prot="public" virt="non-virtual">XBMCAddon::xbmcgui::ControlCheckMark</derivedcompoundref>
    <derivedcompoundref refid="classXBMCAddon_1_1xbmcgui_1_1ControlEdit" prot="public" virt="non-virtual">XBMCAddon::xbmcgui::ControlEdit</derivedcompoundref>
    <derivedcompoundref refid="classXBMCAddon_1_1xbmcgui_1_1ControlFadeLabel" prot="public" virt="non-virtual">XBMCAddon::xbmcgui::ControlFadeLabel</derivedcompoundref>
    <derivedcompoundref refid="classXBMCAddon_1_1xbmcgui_1_1ControlGroup" prot="public" virt="non-virtual">XBMCAddon::xbmcgui::ControlGroup</derivedcompoundref>
    <derivedcompoundref refid="classXBMCAddon_1_1xbmcgui_1_1ControlImage" prot="public" virt="non-virtual">XBMCAddon::xbmcgui::ControlImage</derivedcompoundref>
    <derivedcompoundref refid="classXBMCAddon_1_1xbmcgui_1_1ControlLabel" prot="public" virt="non-virtual">XBMCAddon::xbmcgui::ControlLabel</derivedcompoundref>
    <derivedcompoundref refid="classXBMCAddon_1_1xbmcgui_1_1ControlList" prot="public" virt="non-virtual">XBMCAddon::xbmcgui::ControlList</derivedcompoundref>
    <derivedcompoundref refid="classXBMCAddon_1_1xbmcgui_1_1ControlProgress" prot="public" virt="non-virtual">XBMCAddon::xbmcgui::ControlProgress</derivedcompoundref>
    <derivedcompoundref refid="classXBMCAddon_1_1xbmcgui_1_1ControlRadioButton" prot="public" virt="non-virtual">XBMCAddon::xbmcgui::ControlRadioButton</derivedcompoundref>
    <derivedcompoundref refid="classXBMCAddon_1_1xbmcgui_1_1ControlSlider" prot="public" virt="non-virtual">XBMCAddon::xbmcgui::ControlSlider</derivedcompoundref>
    <derivedcompoundref refid="classXBMCAddon_1_1xbmcgui_1_1ControlSpin" prot="public" virt="non-virtual">XBMCAddon::xbmcgui::ControlSpin</derivedcompoundref>
    <derivedcompoundref refid="classXBMCAddon_1_1xbmcgui_1_1ControlTextBox" prot="public" virt="non-virtual">XBMCAddon::xbmcgui::ControlTextBox</derivedcompoundref>
    <includes refid="Control_8h" local="no">Control.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a92062437972cb63d5e3a3d7a52f5a817" prot="public" static="no" mutable="no">
        <type><ref refid="classXBMCAddon_1_1xbmcgui_1_1ListItem" kindref="compound">XBMCAddon::xbmcgui::ListItem</ref></type>
        <definition>void XBMCAddon::xbmcgui::Control::WindowException</definition>
        <argsstring></argsstring>
        <name>WindowException</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="131" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" bodystart="131" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classXBMCAddon_1_1xbmcgui_1_1Control_1ab7e2e25ceebca04c0a5294a28fccf48e" prot="public" static="no" mutable="no">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmcgui::Control::WindowException</definition>
        <argsstring></argsstring>
        <name>WindowException</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="138" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a831f2a90cd2386d6619b8d3244f3c3c6" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int XBMCAddon::xbmcgui::Control::iControlId</definition>
        <argsstring></argsstring>
        <name>iControlId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="370" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" bodystart="370" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a762cabd8a02fa224e164cd2b7e467465" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int XBMCAddon::xbmcgui::Control::iParentId</definition>
        <argsstring></argsstring>
        <name>iParentId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="371" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" bodystart="371" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a0594c29026ce33f93da497d4739cf2db" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int XBMCAddon::xbmcgui::Control::dwPosX</definition>
        <argsstring></argsstring>
        <name>dwPosX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="372" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" bodystart="372" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a082bd10bb17b2e06ba2c66e4d5c89076" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int XBMCAddon::xbmcgui::Control::dwPosY</definition>
        <argsstring></argsstring>
        <name>dwPosY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="373" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" bodystart="373" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a09ec4357c7696031c0dbf27dfe9a7ab3" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int XBMCAddon::xbmcgui::Control::dwWidth</definition>
        <argsstring></argsstring>
        <name>dwWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="374" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a459ef963aff77bcd3b94c731580cca92" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int XBMCAddon::xbmcgui::Control::dwHeight</definition>
        <argsstring></argsstring>
        <name>dwHeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="375" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a59ac3f58260c830b0104198420157ae4" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int XBMCAddon::xbmcgui::Control::iControlUp</definition>
        <argsstring></argsstring>
        <name>iControlUp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="376" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" bodystart="376" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a010243cc31f63805e840261bb06db684" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int XBMCAddon::xbmcgui::Control::iControlDown</definition>
        <argsstring></argsstring>
        <name>iControlDown</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="377" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a6d2c926cbf74ea3319f6751613a439d9" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int XBMCAddon::xbmcgui::Control::iControlLeft</definition>
        <argsstring></argsstring>
        <name>iControlLeft</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="378" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classXBMCAddon_1_1xbmcgui_1_1Control_1ab5d517c7663a4b9d974fe5abcaec8462" prot="public" static="no" mutable="no">
        <type>int</type>
        <definition>int XBMCAddon::xbmcgui::Control::iControlRight</definition>
        <argsstring></argsstring>
        <name>iControlRight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="379" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" bodystart="379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classXBMCAddon_1_1xbmcgui_1_1Control_1aefdaa3fba21ce3ffeb4d21268aeb947a" prot="public" static="no" mutable="no">
        <type>CGUIControl *</type>
        <definition>CGUIControl* XBMCAddon::xbmcgui::Control::pGUIControl</definition>
        <argsstring></argsstring>
        <name>pGUIControl</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="380" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" bodystart="380" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a0df9d800b7bfaec4211f7bcb60d3c851" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>XBMCAddon::xbmcgui::Control::Control</definition>
        <argsstring>(const char *classname)</argsstring>
        <name>Control</name>
        <param>
          <type>const char *</type>
          <declname>classname</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="85" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" bodystart="82" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a76cf22380945688660f8fe9befa388ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>XBMCAddon::xbmcgui::Control::~Control</definition>
        <argsstring>()</argsstring>
        <name>~Control</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="87" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.cpp" bodystart="716" bodyend="716"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a90551421a79adc25f50592d0d0043e89" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>CGUIControl *</type>
        <definition>CGUIControl * XBMCAddon::xbmcgui::Control::Create</definition>
        <argsstring>()</argsstring>
        <name>Create</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlLabel_1a798ce986db087e15a588f078a5b1b7ce">Create</reimplementedby>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlEdit_1af1127b234a20c6da60f162f90ff812ca">Create</reimplementedby>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlList_1a99141f59333f35004865b44d715aa11d">Create</reimplementedby>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlFadeLabel_1a41d1a0750a0ed21c56104d67e31d39b3">Create</reimplementedby>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlTextBox_1adb09d302171c2c62d8db71963ed46668">Create</reimplementedby>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlImage_1a87821707dd487bf4a50ddff264ac5524">Create</reimplementedby>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlProgress_1a9dc9e4474bfc05b171b1bedce1cc316d">Create</reimplementedby>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlButton_1a78d164656f7dd4f3d04f656874d87129">Create</reimplementedby>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlCheckMark_1a74e7dd98d7c6eb4effe0d8a974214112">Create</reimplementedby>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlGroup_1a6344bf2066cd6d9e915089b69de409fa">Create</reimplementedby>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlRadioButton_1acf3c98d5304ffb3cdcc0aef7b63da8b7">Create</reimplementedby>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlSlider_1add7f26159a3d8397d0e69d915f349ebe">Create</reimplementedby>
        <exceptions> throw (WindowException)</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="90" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.cpp" bodystart="718" bodyend="721"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1ad44fc311107f120e1bf5f9e0c1814211" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>bool</type>
        <definition>virtual bool XBMCAddon::xbmcgui::Control::canAcceptMessages</definition>
        <argsstring>(int actionId)</argsstring>
        <name>canAcceptMessages</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlList_1a69c70e0b9e0797b234a771b3cac360f2">canAcceptMessages</reimplementedby>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlButton_1aa6a25ce99a398c9fe91362dee1e566eb">canAcceptMessages</reimplementedby>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlCheckMark_1a17cfa5363a4afdf367b2aa64059a31a5">canAcceptMessages</reimplementedby>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlRadioButton_1af7b397c6d34b891cc575979545a480f4">canAcceptMessages</reimplementedby>
        <param>
          <type>int</type>
          <declname>actionId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="94" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a364129c170d016cb8235922cdffdb04a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmcgui::Control::setLabel</definition>
        <argsstring>(const String &amp;label=emptyString, const char *font=NULL, const char *textColor=NULL, const char *disabledColor=NULL, const char *shadowColor=NULL, const char *focusedColor=NULL, const String &amp;label2=emptyString) DECL_UNIMP(&quot;Control&quot;)</argsstring>
        <name>setLabel</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlLabel_1a8a7ba300b344f460dc88eb3cf273e7e3">setLabel</reimplementedby>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlEdit_1a39f2c4f1e7a29f70cda6afb8848665f5">setLabel</reimplementedby>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlButton_1a4f1f42892de3c95a4a6fb0df0437166d">setLabel</reimplementedby>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlCheckMark_1acdd8ad41a42534a725ec0b4151db497a">setLabel</reimplementedby>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlRadioButton_1adb18213b0a7854920e3196f0eff5fb04">setLabel</reimplementedby>
        <param>
          <type>const String &amp;</type>
          <declname>label</declname>
          <defval>emptyString</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>font</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>textColor</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>disabledColor</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>shadowColor</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>const char *</type>
          <declname>focusedColor</declname>
          <defval>NULL</defval>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>label2</declname>
          <defval>emptyString</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="102"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a693895dcdebc931731650490396e99b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmcgui::Control::reset</definition>
        <argsstring>() DECL_UNIMP(&quot;Control&quot;)</argsstring>
        <name>reset</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlList_1a3c23efa49b0e70915f410e0c12747d6e">reset</reimplementedby>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlFadeLabel_1a50ec01bad9593f9f995ddeb00ca0b36d">reset</reimplementedby>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlTextBox_1a2e527a38b68c62aa00746eeacf4579cc">reset</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="103"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a9e91e948eae9f9128ab4cd34e4e04678" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmcgui::Control::setSelected</definition>
        <argsstring>(bool selected) DECL_UNIMP(&quot;Control&quot;)</argsstring>
        <name>setSelected</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlCheckMark_1ae057ada9e069c83bba340cbb482e1b3c">setSelected</reimplementedby>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlRadioButton_1a983182bbd5077a9478c73e43e65dc8e1">setSelected</reimplementedby>
        <param>
          <type>bool</type>
          <declname>selected</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="104"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a028397ad7a0b9c0fe4192ad814a9ff93" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmcgui::Control::setPercent</definition>
        <argsstring>(float pct) DECL_UNIMP(&quot;Control&quot;)</argsstring>
        <name>setPercent</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlProgress_1a4b3661f8b16ac948b1e98c4619384598">setPercent</reimplementedby>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlSlider_1acb910c2710322f0f9fc0b66d1b8b29b2">setPercent</reimplementedby>
        <param>
          <type>float</type>
          <declname>pct</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="105"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a4589457684372706c7c621a5e128c758" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmcgui::Control::setDisabledColor</definition>
        <argsstring>(const char *color) DECL_UNIMP(&quot;Control&quot;)</argsstring>
        <name>setDisabledColor</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlButton_1abd1e34c72b881d1aa3a76a64313b42f3">setDisabledColor</reimplementedby>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlCheckMark_1ad5384afdd35d5211ea0a2c5fad1a5ed4">setDisabledColor</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>color</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="106"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a929d64b1a1272e895dcc893a326efd4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>float</type>
        <definition>virtual float XBMCAddon::xbmcgui::Control::getPercent</definition>
        <argsstring>() DECL_UNIMP(&quot;Control&quot;)</argsstring>
        <name>getPercent</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlProgress_1a0df686b8fabecab02a083a9784164a81">getPercent</reimplementedby>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlSlider_1aa890e916a1068c34f65813cd05e2f7c3">getPercent</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="107"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a7679e8634b7adbc2b932d46575c07f2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>String</type>
        <definition>virtual String XBMCAddon::xbmcgui::Control::getLabel</definition>
        <argsstring>() DECL_UNIMP(&quot;Control&quot;)</argsstring>
        <name>getLabel</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlLabel_1a16a01435804701a8e5859527b22dfe8b">getLabel</reimplementedby>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlEdit_1a60600ebdcf42b892e476950c75d8d5c7">getLabel</reimplementedby>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlButton_1a999508fa488472d84371bcd05ea5e44b">getLabel</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="108"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1acc6563c94e9963472005adddc8a07814" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>String</type>
        <definition>virtual String XBMCAddon::xbmcgui::Control::getText</definition>
        <argsstring>() DECL_UNIMP(&quot;Control&quot;)</argsstring>
        <name>getText</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlEdit_1a0258b06554923fc4e686229f9e58f755">getText</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="109"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a0145ea5b68d025f5d641c6b1bed2a1b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>long</type>
        <definition>virtual long XBMCAddon::xbmcgui::Control::size</definition>
        <argsstring>() DECL_UNIMP(&quot;Control&quot;)</argsstring>
        <name>size</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlList_1a64756cbabc1bddc6e0e1ec8fccf83303">size</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="110"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1ad9c53c325b8491abd8e9194094a5c5a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmcgui::Control::setTextures</definition>
        <argsstring>(const char *up, const char *down, const char *upFocus, const char *downFocus) DECL_UNIMP(&quot;Control&quot;)</argsstring>
        <name>setTextures</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlSpin_1ab025f17f3eadf73085d0a081e404e53d">setTextures</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>up</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>down</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>upFocus</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>downFocus</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="113"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1ad03b0dc8052b287d56fa86162a1f39ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmcgui::Control::setText</definition>
        <argsstring>(const String &amp;text) DECL_UNIMP(&quot;Control&quot;)</argsstring>
        <name>setText</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlEdit_1a4a24c610ad372844c2d69c554bfee256">setText</reimplementedby>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlTextBox_1ade3c9e9d712380f902ba77fb1820fd16">setText</reimplementedby>
        <param>
          <type>const String &amp;</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="114"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a43823b6dff1fc5c73809350834e16665" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmcgui::Control::setStaticContent</definition>
        <argsstring>(const ListItemList *items) DECL_UNIMP(&quot;Control&quot;)</argsstring>
        <name>setStaticContent</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlList_1ac9a64be324db472c2d17ac7301e632f3">setStaticContent</reimplementedby>
        <param>
          <type>const ListItemList *</type>
          <declname>items</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="115"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a2bf5c2786d7ae60a9a5fde75c9ba350b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmcgui::Control::setSpace</definition>
        <argsstring>(int space) DECL_UNIMP(&quot;Control&quot;)</argsstring>
        <name>setSpace</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlList_1add4d7ad57e17c4e08ab81c4cdfe035d1">setSpace</reimplementedby>
        <param>
          <type>int</type>
          <declname>space</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="116"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1ab315f135a6885095c8e0feb7704b50c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmcgui::Control::setRadioDimension</definition>
        <argsstring>(long x, long y, long width, long height) DECL_UNIMP(&quot;Control&quot;)</argsstring>
        <name>setRadioDimension</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlRadioButton_1aa99d0ef641490547fb4ce32c3e2b56cf">setRadioDimension</reimplementedby>
        <param>
          <type>long</type>
          <declname>x</declname>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
        </param>
        <param>
          <type>long</type>
          <declname>width</declname>
        </param>
        <param>
          <type>long</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="117"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a74dce6add1e059a338056d648d2840b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmcgui::Control::setPageControlVisible</definition>
        <argsstring>(bool visible) DECL_UNIMP(&quot;Control&quot;)</argsstring>
        <name>setPageControlVisible</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlList_1a3f6538400fd26b44ce76b3e9973225e3">setPageControlVisible</reimplementedby>
        <param>
          <type>bool</type>
          <declname>visible</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="118"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1aa8e12ada769ab3e60bcbc4dbe84a1704" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmcgui::Control::setItemHeight</definition>
        <argsstring>(long height) DECL_UNIMP(&quot;Control&quot;)</argsstring>
        <name>setItemHeight</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlList_1a2264e4af27e7fab9345db925543a896d">setItemHeight</reimplementedby>
        <param>
          <type>long</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="119"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a01737c9ff88c99a2f6038c03ec5f733c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmcgui::Control::setImageDimensions</definition>
        <argsstring>(long imageWidth, long imageHeight) DECL_UNIMP(&quot;Control&quot;)</argsstring>
        <name>setImageDimensions</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlList_1afcdcdf22056586f12eeac0c57756b899">setImageDimensions</reimplementedby>
        <param>
          <type>long</type>
          <declname>imageWidth</declname>
        </param>
        <param>
          <type>long</type>
          <declname>imageHeight</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="120"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a39b855060de1b19a7b5cb2f8b9480abc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmcgui::Control::setImage</definition>
        <argsstring>(const char *imageFilename) DECL_UNIMP(&quot;Control&quot;)</argsstring>
        <name>setImage</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlImage_1ada397cdeeff7ae0217b9a0998e350189">setImage</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>imageFilename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="121"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a18e808a6219946cb50a1282607be207e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmcgui::Control::setColorDiffuse</definition>
        <argsstring>(const char *hexString) DECL_UNIMP(&quot;Control&quot;)</argsstring>
        <name>setColorDiffuse</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlImage_1a26d41bdda29041ed28b0288c88661450">setColorDiffuse</reimplementedby>
        <param>
          <type>const char *</type>
          <declname>hexString</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="122"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a1d4cbbd70af5ececee9819bd13b31294" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmcgui::Control::selectItem</definition>
        <argsstring>(long item) DECL_UNIMP(&quot;Control&quot;)</argsstring>
        <name>selectItem</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlList_1a7b6b5f6552f9802ff076f541f81a8bc8">selectItem</reimplementedby>
        <param>
          <type>long</type>
          <declname>item</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="123"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a075261aa6c764352a50209aab4eaae72" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmcgui::Control::scroll</definition>
        <argsstring>(long id) DECL_UNIMP(&quot;Control&quot;)</argsstring>
        <name>scroll</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlTextBox_1ad44faeac395c8f160e9a50cd44aa26db">scroll</reimplementedby>
        <param>
          <type>long</type>
          <declname>id</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="124"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1aa8fbf6c4d9990213c4fb684fb43b6025" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool XBMCAddon::xbmcgui::Control::isSelected</definition>
        <argsstring>() DECL_UNIMP(&quot;Control&quot;)</argsstring>
        <name>isSelected</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlRadioButton_1acea559151b6565aa0277580100c924ca">isSelected</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="125"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a83008e43ccff27c3ae1a781dce2a2934" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classXBMCAddon_1_1xbmcgui_1_1Control" kindref="compound">Control</ref> *</type>
        <definition>virtual Control* XBMCAddon::xbmcgui::Control::getSpinControl</definition>
        <argsstring>() DECL_UNIMP(&quot;Control&quot;)</argsstring>
        <name>getSpinControl</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlList_1a9b9ac0cd03a6d14c732050f707943d42">getSpinControl</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="126"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a87a4d60def195f5f8001ef7536b2812c" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>long</type>
        <definition>virtual long XBMCAddon::xbmcgui::Control::getSpace</definition>
        <argsstring>() DECL_UNIMP(&quot;Control&quot;)</argsstring>
        <name>getSpace</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlList_1ae3e5f54ecf25888322473a94e8208625">getSpace</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="127"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1ac5bdfb98171294a6c23f027aca06e8a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>long</type>
        <definition>virtual long XBMCAddon::xbmcgui::Control::getSelectedPosition</definition>
        <argsstring>() DECL_UNIMP(&quot;Control&quot;)</argsstring>
        <name>getSelectedPosition</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlList_1a6ddf11d3b177ccbb130b0dc8405b42e5">getSelectedPosition</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="128"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1ad3f6d8dcda92b95b6a18feca695e392b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classXBMCAddon_1_1xbmcgui_1_1ListItem" kindref="compound">XBMCAddon::xbmcgui::ListItem</ref> *</type>
        <definition>virtual XBMCAddon::xbmcgui::ListItem* XBMCAddon::xbmcgui::Control::getSelectedItem</definition>
        <argsstring>() DECL_UNIMP(&quot;Control&quot;)</argsstring>
        <name>getSelectedItem</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlList_1a178d1efd7e16d9fa4af74c03c0d91c06">getSelectedItem</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="129"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a653c8c9fe36dd8c00a9ac45da7bdd82d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>bool</type>
        <definition>virtual bool XBMCAddon::xbmcgui::Control::getSelected</definition>
        <argsstring>() DECL_UNIMP(&quot;Control&quot;)</argsstring>
        <name>getSelected</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlCheckMark_1ab08562d2fd9307a9203f004d589ce1a2">getSelected</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="130"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1ac9d7efc674bfc9117dbebdde1192837e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type><ref refid="classXBMCAddon_1_1xbmcgui_1_1ListItem" kindref="compound">XBMCAddon::xbmcgui::ListItem</ref> *</type>
        <definition>virtual XBMCAddon::xbmcgui::ListItem* XBMCAddon::xbmcgui::Control::getListItem</definition>
        <argsstring>(int index) DECL_UNIMP2(&quot;Control&quot;</argsstring>
        <name>getListItem</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlList_1ab004e7197c849f2b42e7d378a5eb3216">getListItem</reimplementedby>
        <param>
          <type>int</type>
          <declname>index</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="131"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a66c50b660da6d20bfc2b395bb14deb94" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>String</type>
        <definition>virtual String XBMCAddon::xbmcgui::Control::getLabel2</definition>
        <argsstring>() DECL_UNIMP(&quot;Control&quot;)</argsstring>
        <name>getLabel2</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlButton_1abc101db9e84b0b835c71098f02c80dc1">getLabel2</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="132"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a632ef6651d4bca79ca733cc83fec66bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>long</type>
        <definition>virtual long XBMCAddon::xbmcgui::Control::getItemHeight</definition>
        <argsstring>() DECL_UNIMP(&quot;Control&quot;)</argsstring>
        <name>getItemHeight</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlList_1ad3b89116d0fe64b377088f44c879ab73">getItemHeight</reimplementedby>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="133"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a398f57e93e3bf1680191d7e94690d024" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmcgui::Control::addLabel</definition>
        <argsstring>(const String &amp;label) DECL_UNIMP(&quot;Control&quot;)</argsstring>
        <name>addLabel</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlFadeLabel_1ae036164ad82e3489912b70c4287203ed">addLabel</reimplementedby>
        <param>
          <type>const String &amp;</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="134"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a629b3ff8946ff28bdeac588144123b92" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmcgui::Control::addItemStream</definition>
        <argsstring>(const String &amp;fileOrUrl, bool sendMessage=true) DECL_UNIMP2(&quot;Control&quot;</argsstring>
        <name>addItemStream</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlList_1aef751e0b16922005d366f74a5506cfba">addItemStream</reimplementedby>
        <param>
          <type>const String &amp;</type>
          <declname>fileOrUrl</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sendMessage</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="138"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a51374ba4aa293f4e04df8856b06adf8a" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmcgui::Control::addListItem</definition>
        <argsstring>(const XBMCAddon::xbmcgui::ListItem *listitem, bool sendMessage=true) DECL_UNIMP2(&quot;Control&quot;</argsstring>
        <name>addListItem</name>
        <reimplementedby refid="classXBMCAddon_1_1xbmcgui_1_1ControlList_1aff4dff699d39fc031f922d4a6e8a6fd2">addListItem</reimplementedby>
        <param>
          <type>const <ref refid="classXBMCAddon_1_1xbmcgui_1_1ListItem" kindref="compound">XBMCAddon::xbmcgui::ListItem</ref> *</type>
          <declname>listitem</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>sendMessage</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="139"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a6a3989df5298f5165b59a73155bafdb1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int XBMCAddon::xbmcgui::Control::getId</definition>
        <argsstring>()</argsstring>
        <name>getId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a6a3989df5298f5165b59a73155bafdb1" kindref="member">getId()</ref> <ndash/> Returns the control&apos;s current id as an integer.</para><para>example:<itemizedlist>
<listitem><para>id = self.button.getId()<linebreak/>
 </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="147" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" bodystart="147" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a43fa362a752eef414ce817a9949a1cf1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool XBMCAddon::xbmcgui::Control::operator==</definition>
        <argsstring>(const Control &amp;other) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classXBMCAddon_1_1xbmcgui_1_1Control" kindref="compound">Control</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="149" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" bodystart="149" bodyend="149"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1ac622958d57c2680ad7077bd8bf00d41e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool XBMCAddon::xbmcgui::Control::operator&gt;</definition>
        <argsstring>(const Control &amp;other) const </argsstring>
        <name>operator&gt;</name>
        <param>
          <type>const <ref refid="classXBMCAddon_1_1xbmcgui_1_1Control" kindref="compound">Control</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="150" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" bodystart="150" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a7bd60f560d45968bbe1426c263198534" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool XBMCAddon::xbmcgui::Control::operator&lt;</definition>
        <argsstring>(const Control &amp;other) const </argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classXBMCAddon_1_1xbmcgui_1_1Control" kindref="compound">Control</ref> &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="151" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" bodystart="151" bodyend="151"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a21a679353632887bed370b0d54c841b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>std::vector&lt; int &gt;</type>
        <definition>std::vector&lt; int &gt; XBMCAddon::xbmcgui::Control::getPosition</definition>
        <argsstring>()</argsstring>
        <name>getPosition</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a21a679353632887bed370b0d54c841b3" kindref="member">getPosition()</ref> <ndash/> Returns the control&apos;s current position as a x,y integer tuple.</para><para>example:<itemizedlist>
<listitem><para>pos = self.button.getPosition() </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="160" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.cpp" bodystart="723" bodyend="729"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1ac72e0cadbf7a8b0ec66299085fdb8083" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int XBMCAddon::xbmcgui::Control::getX</definition>
        <argsstring>()</argsstring>
        <name>getX</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="161" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" bodystart="161" bodyend="161"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1aadf9649e0f9891d00bc22e7e0dda7df0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int XBMCAddon::xbmcgui::Control::getY</definition>
        <argsstring>()</argsstring>
        <name>getY</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="162" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" bodystart="162" bodyend="162"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a1324db4f6a1c923f40711344f7e208ff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int XBMCAddon::xbmcgui::Control::getHeight</definition>
        <argsstring>()</argsstring>
        <name>getHeight</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a1324db4f6a1c923f40711344f7e208ff" kindref="member">getHeight()</ref> <ndash/> Returns the control&apos;s current height as an integer.</para><para>example:<itemizedlist>
<listitem><para>height = self.button.getHeight() </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="170" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" bodystart="170" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1af1b19d1516e7756e16eedfc880602243" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>int</type>
        <definition>virtual int XBMCAddon::xbmcgui::Control::getWidth</definition>
        <argsstring>()</argsstring>
        <name>getWidth</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classXBMCAddon_1_1xbmcgui_1_1Control_1af1b19d1516e7756e16eedfc880602243" kindref="member">getWidth()</ref> <ndash/> Returns the control&apos;s current width as an integer.</para><para>example:<itemizedlist>
<listitem><para>width = self.button.getWidth() </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="179" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" bodystart="179" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a2741facef1d6730289d5572e256678f7" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmcgui::Control::setEnabled</definition>
        <argsstring>(bool enabled)</argsstring>
        <name>setEnabled</name>
        <param>
          <type>bool</type>
          <declname>enabled</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>setEnabled(enabled) <ndash/> Set&apos;s the control&apos;s enabled/disabled state.</para><para>enabled : bool - True=enabled / False=disabled.</para><para>example:<itemizedlist>
<listitem><para>self.button.setEnabled(False)<linebreak/>
 </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="190" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.cpp" bodystart="731" bodyend="737"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a80e809b56d258c43ea813315c15b6c81" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmcgui::Control::setVisible</definition>
        <argsstring>(bool visible)</argsstring>
        <name>setVisible</name>
        <param>
          <type>bool</type>
          <declname>visible</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>setVisible(visible) <ndash/> Set&apos;s the control&apos;s visible/hidden state.</para><para>visible : bool - True=visible / False=hidden.</para><para>example:<itemizedlist>
<listitem><para>self.button.setVisible(False) </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="201" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.cpp" bodystart="739" bodyend="745"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a6f5b424b8bde8e4210e6e20572abf72d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmcgui::Control::setVisibleCondition</definition>
        <argsstring>(const char *visible, bool allowHiddenFocus=false)</argsstring>
        <name>setVisibleCondition</name>
        <param>
          <type>const char *</type>
          <declname>visible</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>allowHiddenFocus</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>setVisibleCondition(visible[,allowHiddenFocus]) <ndash/> Set&apos;s the control&apos;s visible condition. Allows XBMC to control the visible status of the control.</para><para>visible : string - Visible condition. allowHiddenFocus : bool - True=gains focus even if hidden.</para><para><ref refid="classXBMCAddon_1_1List" kindref="compound">List</ref> of Conditions - <ulink url="http://wiki.xbmc.org/index.php?title=List_of_Boolean_Conditions">http://wiki.xbmc.org/index.php?title=List_of_Boolean_Conditions</ulink></para><para>example:<itemizedlist>
<listitem><para>self.button.setVisibleCondition(&apos;[Control.IsVisible(41) + !Control.IsVisible(12)]&apos;, True)<linebreak/>
 </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="216" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.cpp" bodystart="747" bodyend="754"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1ac45a0f76e5d0605a1706abac62952df8" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmcgui::Control::setEnableCondition</definition>
        <argsstring>(const char *enable)</argsstring>
        <name>setEnableCondition</name>
        <param>
          <type>const char *</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>setEnableCondition(enable) <ndash/> Set&apos;s the control&apos;s enabled condition. Allows XBMC to control the enabled status of the control.</para><para>enable : string - Enable condition.</para><para><ref refid="classXBMCAddon_1_1List" kindref="compound">List</ref> of Conditions - <ulink url="http://wiki.xbmc.org/index.php?title=List_of_Boolean_Conditions">http://wiki.xbmc.org/index.php?title=List_of_Boolean_Conditions</ulink></para><para>example:<itemizedlist>
<listitem><para>self.button.setEnableCondition(&apos;System.InternetState&apos;) </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="230" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.cpp" bodystart="756" bodyend="763"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1af9d0e604ae56521b35b04acb93613f9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmcgui::Control::setAnimations</definition>
        <argsstring>(const std::vector&lt; Tuple&lt; String, String &gt; &gt; &amp;eventAttr)</argsstring>
        <name>setAnimations</name>
        <param>
          <type>const std::vector&lt; <ref refid="classXBMCAddon_1_1Tuple" kindref="compound">Tuple</ref>&lt; String, String &gt; &gt; &amp;</type>
          <declname>eventAttr</declname>
        </param>
        <exceptions> throw (WindowException)</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>setAnimations([(event, attr,)*]) <ndash/> Set&apos;s the control&apos;s animations.</para><para>[(event,attr,)*] : list - A list of tuples consisting of event and attributes pairs.<itemizedlist>
<listitem><para>event : string - The event to animate.</para></listitem><listitem><para>attr : string - The whole attribute string separated by spaces.</para></listitem></itemizedlist>
</para><para>Animating your skin - <ulink url="http://wiki.xbmc.org/?title=Animating_Your_Skin">http://wiki.xbmc.org/?title=Animating_Your_Skin</ulink></para><para>example:<itemizedlist>
<listitem><para>self.button.setAnimations([(&apos;focus&apos;, &apos;effect=zoom end=90,247,220,56 time=0&apos;,)])<linebreak/>
 </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="245" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.cpp" bodystart="765" bodyend="807"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a03048c7627077b3bb9c2197d6ddf8152" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmcgui::Control::setPosition</definition>
        <argsstring>(long x, long y)</argsstring>
        <name>setPosition</name>
        <param>
          <type>long</type>
          <declname>x</declname>
        </param>
        <param>
          <type>long</type>
          <declname>y</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>setPosition(x, y) <ndash/> Set&apos;s the controls position.</para><para>x : integer - x coordinate of control. y : integer - y coordinate of control.</para><para>*Note, You may use negative integers. (e.g sliding a control into view)</para><para>example:<itemizedlist>
<listitem><para>self.button.setPosition(100, 250)<linebreak/>
 </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="259" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.cpp" bodystart="809" bodyend="817"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1aaf6c51df65738d70afca44842119b360" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmcgui::Control::setWidth</definition>
        <argsstring>(long width)</argsstring>
        <name>setWidth</name>
        <param>
          <type>long</type>
          <declname>width</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>setWidth(width) <ndash/> Set&apos;s the controls width.</para><para>width : integer - width of control.</para><para>example:<itemizedlist>
<listitem><para>self.image.setWidth(100) </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="270" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.cpp" bodystart="819" bodyend="826"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a25280450c5fbf816106d82840e2b9442" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmcgui::Control::setHeight</definition>
        <argsstring>(long height)</argsstring>
        <name>setHeight</name>
        <param>
          <type>long</type>
          <declname>height</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>setHeight(height) <ndash/> Set&apos;s the controls height.</para><para>height : integer - height of control.</para><para>example:<itemizedlist>
<listitem><para>self.image.setHeight(100) </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="281" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.cpp" bodystart="828" bodyend="835"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a8f280d0ba18e1766ffdb0cec17dbc464" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmcgui::Control::setNavigation</definition>
        <argsstring>(const Control *up, const Control *down, const Control *left, const Control *right)</argsstring>
        <name>setNavigation</name>
        <param>
          <type>const <ref refid="classXBMCAddon_1_1xbmcgui_1_1Control" kindref="compound">Control</ref> *</type>
          <declname>up</declname>
        </param>
        <param>
          <type>const <ref refid="classXBMCAddon_1_1xbmcgui_1_1Control" kindref="compound">Control</ref> *</type>
          <declname>down</declname>
        </param>
        <param>
          <type>const <ref refid="classXBMCAddon_1_1xbmcgui_1_1Control" kindref="compound">Control</ref> *</type>
          <declname>left</declname>
        </param>
        <param>
          <type>const <ref refid="classXBMCAddon_1_1xbmcgui_1_1Control" kindref="compound">Control</ref> *</type>
          <declname>right</declname>
        </param>
        <exceptions> throw (WindowException)</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>setNavigation(up, down, left, right) <ndash/> Set&apos;s the controls navigation.</para><para>up : control object - control to navigate to on up. down : control object - control to navigate to on down. left : control object - control to navigate to on left. right : control object - control to navigate to on right.</para><para>*Note, Same as <ref refid="classXBMCAddon_1_1xbmcgui_1_1Control_1ac22927946710cc0152f80ec03f2a7b19" kindref="member">controlUp()</ref>, <ref refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a4337ab7595b7cc6aca2eb7510067c728" kindref="member">controlDown()</ref>, <ref refid="classXBMCAddon_1_1xbmcgui_1_1Control_1ac1e1aa737b881c6d48e8f835a9a38f3b" kindref="member">controlLeft()</ref>, <ref refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a0f64496cd3f47bb86a69096984060681" kindref="member">controlRight()</ref>. Set to self to disable navigation for that direction.</para><para>Throws: TypeError, if one of the supplied arguments is not a control type. ReferenceError, if one of the controls is not added to a window.</para><para>example:<itemizedlist>
<listitem><para>self.button.setNavigation(self.button1, self.button2, self.button3, self.button4) </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="303" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.cpp" bodystart="837" bodyend="854"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1ac22927946710cc0152f80ec03f2a7b19" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmcgui::Control::controlUp</definition>
        <argsstring>(const Control *up)</argsstring>
        <name>controlUp</name>
        <param>
          <type>const <ref refid="classXBMCAddon_1_1xbmcgui_1_1Control" kindref="compound">Control</ref> *</type>
          <declname>up</declname>
        </param>
        <exceptions> throw (WindowException)</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>controlUp(control) <ndash/> Set&apos;s the controls up navigation.</para><para>control : control object - control to navigate to on up.</para><para>*Note, You can also use <ref refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a8f280d0ba18e1766ffdb0cec17dbc464" kindref="member">setNavigation()</ref>. Set to self to disable navigation.</para><para>Throws: TypeError, if one of the supplied arguments is not a control type. ReferenceError, if one of the controls is not added to a window.</para><para>example:<itemizedlist>
<listitem><para>self.button.controlUp(self.button1) </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="319" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.cpp" bodystart="856" bodyend="867"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a4337ab7595b7cc6aca2eb7510067c728" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmcgui::Control::controlDown</definition>
        <argsstring>(const Control *control)</argsstring>
        <name>controlDown</name>
        <param>
          <type>const <ref refid="classXBMCAddon_1_1xbmcgui_1_1Control" kindref="compound">Control</ref> *</type>
          <declname>control</declname>
        </param>
        <exceptions> throw (WindowException)</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>controlDown(control) <ndash/> Set&apos;s the controls down navigation.</para><para>control : control object - control to navigate to on down.</para><para>*Note, You can also use <ref refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a8f280d0ba18e1766ffdb0cec17dbc464" kindref="member">setNavigation()</ref>. Set to self to disable navigation.</para><para>Throws: TypeError, if one of the supplied arguments is not a control type. ReferenceError, if one of the controls is not added to a window.</para><para>example:<itemizedlist>
<listitem><para>self.button.controlDown(self.button1) </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="335" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.cpp" bodystart="869" bodyend="880"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1ac1e1aa737b881c6d48e8f835a9a38f3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmcgui::Control::controlLeft</definition>
        <argsstring>(const Control *control)</argsstring>
        <name>controlLeft</name>
        <param>
          <type>const <ref refid="classXBMCAddon_1_1xbmcgui_1_1Control" kindref="compound">Control</ref> *</type>
          <declname>control</declname>
        </param>
        <exceptions> throw (WindowException)</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>controlLeft(control) <ndash/> Set&apos;s the controls left navigation.</para><para>control : control object - control to navigate to on left.</para><para>*Note, You can also use <ref refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a8f280d0ba18e1766ffdb0cec17dbc464" kindref="member">setNavigation()</ref>. Set to self to disable navigation.</para><para>Throws: TypeError, if one of the supplied arguments is not a control type. ReferenceError, if one of the controls is not added to a window.</para><para>example:<itemizedlist>
<listitem><para>self.button.controlLeft(self.button1) </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="351" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.cpp" bodystart="882" bodyend="893"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1Control_1a0f64496cd3f47bb86a69096984060681" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmcgui::Control::controlRight</definition>
        <argsstring>(const Control *control)</argsstring>
        <name>controlRight</name>
        <param>
          <type>const <ref refid="classXBMCAddon_1_1xbmcgui_1_1Control" kindref="compound">Control</ref> *</type>
          <declname>control</declname>
        </param>
        <exceptions> throw (WindowException)</exceptions>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>controlRight(control) <ndash/> Set&apos;s the controls right navigation.</para><para>control : control object - control to navigate to on right.</para><para>*Note, You can also use <ref refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a8f280d0ba18e1766ffdb0cec17dbc464" kindref="member">setNavigation()</ref>. Set to self to disable navigation.</para><para>Throws: TypeError, if one of the supplied arguments is not a control type. ReferenceError, if one of the controls is not added to a window.</para><para>example:<itemizedlist>
<listitem><para>self.button.controlRight(self.button1)<linebreak/>
 </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="367" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.cpp" bodystart="895" bodyend="906"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>Parent for control classes. The problem here is that Python uses references to this class in a dynamic typing way. For example, you will find this type of python code frequently:</para><para>window.getControl( 100 ).setLabel( &quot;Stupid Dynamic Type&quot;)</para><para>Notice that the &apos;getControl&apos; call returns a &apos;<ref refid="classXBMCAddon_1_1xbmcgui_1_1Control" kindref="compound">Control</ref>&apos; object. In a dynamically typed language, the subsequent call to setLabel works if the specific type of control has the method. The script writer is often in a position to know more than the code about the specific <ref refid="classXBMCAddon_1_1xbmcgui_1_1Control" kindref="compound">Control</ref> type (in the example, that control id 100 is a &apos;<ref refid="classXBMCAddon_1_1xbmcgui_1_1ControlLabel" kindref="compound">ControlLabel</ref>&apos;) where the C++ code is not.</para><para>SWIG doesn&apos;t support this type of dynamic typing. The &apos;<ref refid="classXBMCAddon_1_1xbmcgui_1_1Control" kindref="compound">Control</ref>&apos; wrapper that&apos;s returned will wrap a <ref refid="classXBMCAddon_1_1xbmcgui_1_1ControlLabel" kindref="compound">ControlLabel</ref> but will not have the &apos;setLabel&apos; method on it. The only way to handle this is to add all possible subclass methods to the parent class. This is ugly but the alternative is nearly as ugly. It&apos;s particularly ugly here because the majority of the methods are unique to the particular subclass.</para><para>If anyone thinks they have a solution then let me know. The alternative would be to have a set of &apos;getContol&apos; methods, each one coresponding to a type so that the downcast can be done in the native code. IOW rather than a simple &apos;getControl&apos; there would be a &apos;getControlLabel&apos;, &apos;getControlRadioButton&apos;, &apos;getControlButton&apos;, etc.</para><para>TODO:This later solution should be implemented for future scripting languages while the former will remain as deprecated functionality for Python. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="140">
        <label>XBMCAddon::AddonClass</label>
        <link refid="classXBMCAddon_1_1AddonClass"/>
      </node>
      <node id="151">
        <label>XBMCAddon::xbmcgui::ControlSlider</label>
        <link refid="classXBMCAddon_1_1xbmcgui_1_1ControlSlider"/>
        <childnode refid="139" relation="public-inheritance">
        </childnode>
      </node>
      <node id="145">
        <label>XBMCAddon::xbmcgui::ControlGroup</label>
        <link refid="classXBMCAddon_1_1xbmcgui_1_1ControlGroup"/>
        <childnode refid="139" relation="public-inheritance">
        </childnode>
      </node>
      <node id="150">
        <label>XBMCAddon::xbmcgui::ControlRadioButton</label>
        <link refid="classXBMCAddon_1_1xbmcgui_1_1ControlRadioButton"/>
        <childnode refid="139" relation="public-inheritance">
        </childnode>
      </node>
      <node id="144">
        <label>XBMCAddon::xbmcgui::ControlFadeLabel</label>
        <link refid="classXBMCAddon_1_1xbmcgui_1_1ControlFadeLabel"/>
        <childnode refid="139" relation="public-inheritance">
        </childnode>
      </node>
      <node id="139">
        <label>XBMCAddon::xbmcgui::Control</label>
        <link refid="classXBMCAddon_1_1xbmcgui_1_1Control"/>
        <childnode refid="140" relation="public-inheritance">
        </childnode>
      </node>
      <node id="141">
        <label>XBMCAddon::xbmcgui::ControlButton</label>
        <link refid="classXBMCAddon_1_1xbmcgui_1_1ControlButton"/>
        <childnode refid="139" relation="public-inheritance">
        </childnode>
      </node>
      <node id="142">
        <label>XBMCAddon::xbmcgui::ControlCheckMark</label>
        <link refid="classXBMCAddon_1_1xbmcgui_1_1ControlCheckMark"/>
        <childnode refid="139" relation="public-inheritance">
        </childnode>
      </node>
      <node id="152">
        <label>XBMCAddon::xbmcgui::ControlSpin</label>
        <link refid="classXBMCAddon_1_1xbmcgui_1_1ControlSpin"/>
        <childnode refid="139" relation="public-inheritance">
        </childnode>
      </node>
      <node id="143">
        <label>XBMCAddon::xbmcgui::ControlEdit</label>
        <link refid="classXBMCAddon_1_1xbmcgui_1_1ControlEdit"/>
        <childnode refid="139" relation="public-inheritance">
        </childnode>
      </node>
      <node id="148">
        <label>XBMCAddon::xbmcgui::ControlList</label>
        <link refid="classXBMCAddon_1_1xbmcgui_1_1ControlList"/>
        <childnode refid="139" relation="public-inheritance">
        </childnode>
      </node>
      <node id="147">
        <label>XBMCAddon::xbmcgui::ControlLabel</label>
        <link refid="classXBMCAddon_1_1xbmcgui_1_1ControlLabel"/>
        <childnode refid="139" relation="public-inheritance">
        </childnode>
      </node>
      <node id="146">
        <label>XBMCAddon::xbmcgui::ControlImage</label>
        <link refid="classXBMCAddon_1_1xbmcgui_1_1ControlImage"/>
        <childnode refid="139" relation="public-inheritance">
        </childnode>
      </node>
      <node id="149">
        <label>XBMCAddon::xbmcgui::ControlProgress</label>
        <link refid="classXBMCAddon_1_1xbmcgui_1_1ControlProgress"/>
        <childnode refid="139" relation="public-inheritance">
        </childnode>
      </node>
      <node id="153">
        <label>XBMCAddon::xbmcgui::ControlTextBox</label>
        <link refid="classXBMCAddon_1_1xbmcgui_1_1ControlTextBox"/>
        <childnode refid="139" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="155">
        <label>XBMCAddon::AddonClass</label>
        <link refid="classXBMCAddon_1_1AddonClass"/>
        <childnode refid="156" relation="usage">
          <edgelabel>languageHook</edgelabel>
        </childnode>
      </node>
      <node id="157">
        <label>XBMCAddon::xbmcgui::ListItem</label>
        <link refid="classXBMCAddon_1_1xbmcgui_1_1ListItem"/>
        <childnode refid="155" relation="public-inheritance">
        </childnode>
      </node>
      <node id="154">
        <label>XBMCAddon::xbmcgui::Control</label>
        <link refid="classXBMCAddon_1_1xbmcgui_1_1Control"/>
        <childnode refid="155" relation="public-inheritance">
        </childnode>
        <childnode refid="157" relation="usage">
          <edgelabel>WindowException</edgelabel>
        </childnode>
      </node>
      <node id="156">
        <label>XBMCAddon::LanguageHook</label>
        <link refid="classXBMCAddon_1_1LanguageHook"/>
        <childnode refid="155" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" line="79" bodyfile="/usr/src/xbmc/xbmc/interfaces/legacy/Control.h" bodystart="78" bodyend="383"/>
    <listofallmembers>
      <member refid="classXBMCAddon_1_1AddonClass_1ab70ccb0c1ca2f4099577e9ca59ae8f49" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>Acquire</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a629b3ff8946ff28bdeac588144123b92" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>addItemStream</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a398f57e93e3bf1680191d7e94690d024" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>addLabel</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a51374ba4aa293f4e04df8856b06adf8a" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>addListItem</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1a3ec5b6d08299a5b8913967c855e536c0" prot="protected" virt="non-virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>AddonClass</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1a0a75a3b4efb4b2ac3c995465e9b9e6a9" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>AddonClass</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1ad44fc311107f120e1bf5f9e0c1814211" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>canAcceptMessages</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a0df9d800b7bfaec4211f7bcb60d3c851" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>Control</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a4337ab7595b7cc6aca2eb7510067c728" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>controlDown</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1ac1e1aa737b881c6d48e8f835a9a38f3b" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>controlLeft</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a0f64496cd3f47bb86a69096984060681" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>controlRight</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1ac22927946710cc0152f80ec03f2a7b19" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>controlUp</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a90551421a79adc25f50592d0d0043e89" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>Create</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1afd73e0ec1af35bf37e3e54971d23abd0" prot="protected" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>deallocating</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a459ef963aff77bcd3b94c731580cca92" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>dwHeight</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a0594c29026ce33f93da497d4739cf2db" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>dwPosX</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a082bd10bb17b2e06ba2c66e4d5c89076" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>dwPosY</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a09ec4357c7696031c0dbf27dfe9a7ab3" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>dwWidth</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1a5006d4fc03ec77770e5e06e8b112ee60" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>GetClassname</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a1324db4f6a1c923f40711344f7e208ff" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>getHeight</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a6a3989df5298f5165b59a73155bafdb1" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>getId</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a632ef6651d4bca79ca733cc83fec66bc" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>getItemHeight</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a7679e8634b7adbc2b932d46575c07f2d" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>getLabel</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a66c50b660da6d20bfc2b395bb14deb94" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>getLabel2</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1a42cb67038af10d4b53c2e7a13ee22591" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>GetLanguageHook</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1ac9d7efc674bfc9117dbebdde1192837e" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>getListItem</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a929d64b1a1272e895dcc893a326efd4e" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>getPercent</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a21a679353632887bed370b0d54c841b3" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>getPosition</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a653c8c9fe36dd8c00a9ac45da7bdd82d" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>getSelected</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1ad3f6d8dcda92b95b6a18feca695e392b" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>getSelectedItem</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1ac5bdfb98171294a6c23f027aca06e8a3" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>getSelectedPosition</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a87a4d60def195f5f8001ef7536b2812c" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>getSpace</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a83008e43ccff27c3ae1a781dce2a2934" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>getSpinControl</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1acc6563c94e9963472005adddc8a07814" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>getText</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1af1b19d1516e7756e16eedfc880602243" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>getWidth</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1ac72e0cadbf7a8b0ec66299085fdb8083" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>getX</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1aadf9649e0f9891d00bc22e7e0dda7df0" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>getY</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a010243cc31f63805e840261bb06db684" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>iControlDown</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a831f2a90cd2386d6619b8d3244f3c3c6" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>iControlId</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a6d2c926cbf74ea3319f6751613a439d9" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>iControlLeft</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1ab5d517c7663a4b9d974fe5abcaec8462" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>iControlRight</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a59ac3f58260c830b0104198420157ae4" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>iControlUp</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a762cabd8a02fa224e164cd2b7e467465" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>iParentId</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1a218a8226c7ef2f361af6671a5f25efd0" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>isDeallocating</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1aa8fbf6c4d9990213c4fb684fb43b6025" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>isSelected</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1aa71b56d06a92152c726833de1308405e" prot="protected" virt="non-virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>languageHook</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a7bd60f560d45968bbe1426c263198534" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>operator&lt;</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a43fa362a752eef414ce817a9949a1cf1" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>operator==</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1ac622958d57c2680ad7077bd8bf00d41e" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>operator&gt;</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1aefdaa3fba21ce3ffeb4d21268aeb947a" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>pGUIControl</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1a5c5ab8cbc38921ad05e9a853f1e52493" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>Release</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a693895dcdebc931731650490396e99b4" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>reset</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a075261aa6c764352a50209aab4eaae72" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>scroll</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a1d4cbbd70af5ececee9819bd13b31294" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>selectItem</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1af9d0e604ae56521b35b04acb93613f9e" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>setAnimations</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a18e808a6219946cb50a1282607be207e" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>setColorDiffuse</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a4589457684372706c7c621a5e128c758" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>setDisabledColor</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1ac45a0f76e5d0605a1706abac62952df8" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>setEnableCondition</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a2741facef1d6730289d5572e256678f7" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>setEnabled</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a25280450c5fbf816106d82840e2b9442" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>setHeight</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a39b855060de1b19a7b5cb2f8b9480abc" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>setImage</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a01737c9ff88c99a2f6038c03ec5f733c" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>setImageDimensions</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1aa8e12ada769ab3e60bcbc4dbe84a1704" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>setItemHeight</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a364129c170d016cb8235922cdffdb04a" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>setLabel</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a8f280d0ba18e1766ffdb0cec17dbc464" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>setNavigation</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a74dce6add1e059a338056d648d2840b3" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>setPageControlVisible</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a028397ad7a0b9c0fe4192ad814a9ff93" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>setPercent</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a03048c7627077b3bb9c2197d6ddf8152" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>setPosition</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1ab315f135a6885095c8e0feb7704b50c6" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>setRadioDimension</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a9e91e948eae9f9128ab4cd34e4e04678" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>setSelected</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a2bf5c2786d7ae60a9a5fde75c9ba350b" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>setSpace</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a43823b6dff1fc5c73809350834e16665" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>setStaticContent</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1ad03b0dc8052b287d56fa86162a1f39ea" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>setText</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1ad9c53c325b8491abd8e9194094a5c5a5" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>setTextures</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a80e809b56d258c43ea813315c15b6c81" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>setVisible</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a6f5b424b8bde8e4210e6e20572abf72d" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>setVisibleCondition</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1aaf6c51df65738d70afca44842119b360" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>setWidth</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a0145ea5b68d025f5d641c6b1bed2a1b6" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>size</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a92062437972cb63d5e3a3d7a52f5a817" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>WindowException</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1ab7e2e25ceebca04c0a5294a28fccf48e" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>WindowException</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1ae27cdf6c5fab63f5d09e965e1573fce7" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>~AddonClass</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1Control_1a76cf22380945688660f8fe9befa388ab" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::Control</scope><name>~Control</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
