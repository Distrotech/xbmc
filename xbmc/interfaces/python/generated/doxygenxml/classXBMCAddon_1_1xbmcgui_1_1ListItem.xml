<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classXBMCAddon_1_1xbmcgui_1_1ListItem" kind="class" prot="public">
    <compoundname>XBMCAddon::xbmcgui::ListItem</compoundname>
    <basecompoundref refid="classXBMCAddon_1_1AddonClass" prot="public" virt="non-virtual">XBMCAddon::AddonClass</basecompoundref>
    <includes refid="ListItem_8h" local="no">ListItem.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a0db07e3f57afef1779abb31b234cd398" prot="public" static="no" mutable="no">
        <type>CFileItemPtr</type>
        <definition>CFileItemPtr XBMCAddon::xbmcgui::ListItem::item</definition>
        <argsstring></argsstring>
        <name>item</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" line="68" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" bodystart="68" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a74c1764c92146ff0656919334ae2825a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>XBMCAddon::xbmcgui::ListItem::ListItem</definition>
        <argsstring>(const String &amp;label=emptyString, const String &amp;label2=emptyString, const String &amp;iconImage=emptyString, const String &amp;thumbnailImage=emptyString, const String &amp;path=emptyString)</argsstring>
        <name>ListItem</name>
        <param>
          <type>const String &amp;</type>
          <declname>label</declname>
          <defval>emptyString</defval>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>label2</declname>
          <defval>emptyString</defval>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>iconImage</declname>
          <defval>emptyString</defval>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>thumbnailImage</declname>
          <defval>emptyString</defval>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>path</declname>
          <defval>emptyString</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" line="71" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.cpp" bodystart="39" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a41f23eda94371cedb8b48179784412b6" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>XBMCAddon::xbmcgui::ListItem::ListItem</definition>
        <argsstring>(CFileItemPtr pitem)</argsstring>
        <name>ListItem</name>
        <param>
          <type>CFileItemPtr</type>
          <declname>pitem</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" line="78" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a3da249755c793457a791d01ed9ed899d" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>XBMCAddon::xbmcgui::ListItem::~ListItem</definition>
        <argsstring>()</argsstring>
        <name>~ListItem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" line="88" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.cpp" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1ListItem_1ab4547bdd034353f97065364c7f630d0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String XBMCAddon::xbmcgui::ListItem::getLabel</definition>
        <argsstring>()</argsstring>
        <name>getLabel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1ab4547bdd034353f97065364c7f630d0c" kindref="member">getLabel()</ref> <ndash/> Returns the listitem label.<linebreak/>
<linebreak/>
example:<itemizedlist>
<listitem><para>label = self.list.getSelectedItem().<ref refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1ab4547bdd034353f97065364c7f630d0c" kindref="member">getLabel()</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" line="96" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.cpp" bodystart="69" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a92ce089328a670d985b76cf455760ae1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String XBMCAddon::xbmcgui::ListItem::getLabel2</definition>
        <argsstring>()</argsstring>
        <name>getLabel2</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a92ce089328a670d985b76cf455760ae1" kindref="member">getLabel2()</ref> <ndash/> Returns the listitem label.<linebreak/>
<linebreak/>
example:<itemizedlist>
<listitem><para>label = self.list.getSelectedItem().<ref refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a92ce089328a670d985b76cf455760ae1" kindref="member">getLabel2()</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" line="104" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.cpp" bodystart="82" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a39b578b0d2bcaf3539ef51e818daa118" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmcgui::ListItem::setLabel</definition>
        <argsstring>(const String &amp;label)</argsstring>
        <name>setLabel</name>
        <param>
          <type>const String &amp;</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>setLabel(label) <ndash/> Sets the listitem&apos;s label.<linebreak/>
<linebreak/>
label : string or unicode - text string.<linebreak/>
<linebreak/>
example:<itemizedlist>
<listitem><para>self.list.getSelectedItem().setLabel(&apos;Casino Royale&apos;) </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" line="114" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.cpp" bodystart="95" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a9062cf9d34e22e05d6c0fe73b604dee0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmcgui::ListItem::setLabel2</definition>
        <argsstring>(const String &amp;label)</argsstring>
        <name>setLabel2</name>
        <param>
          <type>const String &amp;</type>
          <declname>label</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>setLabel2(label) <ndash/> Sets the listitem&apos;s label2.<linebreak/>
<linebreak/>
label : string or unicode - text string.<linebreak/>
<linebreak/>
example:<itemizedlist>
<listitem><para>self.list.getSelectedItem().setLabel2(&apos;Casino Royale&apos;) </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" line="124" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.cpp" bodystart="105" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a30cfd4ff45973c8548fbfdab7789708f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmcgui::ListItem::setIconImage</definition>
        <argsstring>(const String &amp;iconImage)</argsstring>
        <name>setIconImage</name>
        <param>
          <type>const String &amp;</type>
          <declname>iconImage</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deprecated. Use setArt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" line="129" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.cpp" bodystart="115" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a39a5cbe9ce5d46a88538f2a190e96b8f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmcgui::ListItem::setThumbnailImage</definition>
        <argsstring>(const String &amp;thumbFilename)</argsstring>
        <name>setThumbnailImage</name>
        <param>
          <type>const String &amp;</type>
          <declname>thumbFilename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Deprecated. Use setArt </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" line="134" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.cpp" bodystart="124" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1ListItem_1accc35c58f91d385a292cd7053e1fca3b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmcgui::ListItem::setArt</definition>
        <argsstring>(const Properties &amp;dictionary)</argsstring>
        <name>setArt</name>
        <param>
          <type>const <ref refid="classXBMCAddon_1_1Dictionary" kindref="compound">Properties</ref> &amp;</type>
          <declname>dictionary</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>setArt(values) <ndash/> Sets the listitem&apos;s art <linebreak/>
values : dictionary - pairs of { label: value }.<linebreak/>
<itemizedlist>
<listitem><para>Some default art values (any string possible):<itemizedlist>
<listitem><para>thumb : string - image filename</para></listitem><listitem><para>poster : string - image filename</para></listitem><listitem><para>banner : string - image filename</para></listitem><listitem><para>fanart : string - image filename</para></listitem><listitem><para>clearart : string - image filename</para></listitem><listitem><para>clearlogo : string - image filename</para></listitem><listitem><para>landscape : string - image filename</para></listitem><listitem><para>icon : string - image filename</para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para><para>example:<itemizedlist>
<listitem><para>self.list.getSelectedItem().setArt({ &apos;poster&apos;: &apos;poster.png&apos;, &apos;banner&apos; : &apos;banner.png&apos; }) </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" line="154" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.cpp" bodystart="133" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a3a43d35d83d82035344361c8db8bad18" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmcgui::ListItem::select</definition>
        <argsstring>(bool selected)</argsstring>
        <name>select</name>
        <param>
          <type>bool</type>
          <declname>selected</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>select(selected) <ndash/> Sets the listitem&apos;s selected status.<linebreak/>
<linebreak/>
selected : bool - True=selected/False=not selected<linebreak/>
<linebreak/>
example:<itemizedlist>
<listitem><para>self.list.getSelectedItem().select(True) </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" line="164" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.cpp" bodystart="150" bodyend="157"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a9ad24c75f897563c30e29b703aa483a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool XBMCAddon::xbmcgui::ListItem::isSelected</definition>
        <argsstring>()</argsstring>
        <name>isSelected</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a9ad24c75f897563c30e29b703aa483a0" kindref="member">isSelected()</ref> <ndash/> Returns the listitem&apos;s selected status.<linebreak/>
<linebreak/>
example:<itemizedlist>
<listitem><para>is = self.list.getSelectedItem().<ref refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a9ad24c75f897563c30e29b703aa483a0" kindref="member">isSelected()</ref> </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" line="172" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.cpp" bodystart="160" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1ListItem_1acfb3092da8aa1858602464070f668b4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmcgui::ListItem::setInfo</definition>
        <argsstring>(const char *type, const InfoLabelDict &amp;infoLabels)</argsstring>
        <name>setInfo</name>
        <param>
          <type>const char *</type>
          <declname>type</declname>
        </param>
        <param>
          <type>const <ref refid="classXBMCAddon_1_1Dictionary" kindref="compound">InfoLabelDict</ref> &amp;</type>
          <declname>infoLabels</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>setInfo(type, infoLabels) <ndash/> Sets the listitem&apos;s infoLabels.<linebreak/>
<linebreak/>
type : string - type of media(video/music/pictures).<linebreak/>
infoLabels : dictionary - pairs of { label: value }.<linebreak/>
<linebreak/>
*Note, To set pictures exif info, prepend &apos;exif:&apos; to the label. Exif values must be passed<linebreak/>
 as strings, separate value pairs with a comma. (eg. {&apos;exif:resolution&apos;: &apos;720,480&apos;}<linebreak/>
 See CPictureInfoTag::TranslateString in PictureInfoTag.cpp for valid strings.<linebreak/>
<linebreak/>
 You can use the above as keywords for arguments and skip certain optional arguments.<linebreak/>
 Once you use a keyword, all following arguments require the keyword.<linebreak/>
<linebreak/>
<itemizedlist>
<listitem><para>General Values that apply to all types:<itemizedlist>
<listitem><para>count : integer (12) - can be used to store an id for later, or for sorting purposes</para></listitem><listitem><para>size : long (1024) - size in bytes</para></listitem><listitem><para>date : string (d.m.Y / 01.01.2009) - file date</para></listitem></itemizedlist>
</para></listitem><listitem><para>Video Values:<itemizedlist>
<listitem><para>genre : string (Comedy)</para></listitem><listitem><para>year : integer (2009)</para></listitem><listitem><para>episode : integer (4)</para></listitem><listitem><para>season : integer (1)</para></listitem><listitem><para>top250 : integer (192)</para></listitem><listitem><para>tracknumber : integer (3)</para></listitem><listitem><para>rating : float (6.4) - range is 0..10</para></listitem><listitem><para>userrating : integer (9) - range is 1..10</para></listitem><listitem><para>watched : depreciated - use playcount instead</para></listitem><listitem><para>playcount : integer (2) - number of times this item has been played</para></listitem><listitem><para>overlay : integer (2) - range is 0..8. See GUIListItem.h for values</para></listitem><listitem><para>cast : list ([&quot;Michal C. Hall&quot;,&quot;Jennifer Carpenter&quot;]) - if provided a list of tuples cast will be interpreted as castandrole</para></listitem><listitem><para>castandrole : list of tuples ([(&quot;Michael C. Hall&quot;,&quot;Dexter&quot;),(&quot;Jennifer Carpenter&quot;,&quot;Debra&quot;)])</para></listitem><listitem><para>director : string (Dagur Kari)</para></listitem><listitem><para>mpaa : string (PG-13)</para></listitem><listitem><para>plot : string (Long Description)</para></listitem><listitem><para>plotoutline : string (Short Description)</para></listitem><listitem><para>title : string (Big Fan)</para></listitem><listitem><para>originaltitle : string (Big Fan)</para></listitem><listitem><para>sorttitle : string (Big Fan)</para></listitem><listitem><para>duration : integer (245) - duration in seconds</para></listitem><listitem><para>studio : string (Warner Bros.)</para></listitem><listitem><para>tagline : string (An awesome movie) - short description of movie</para></listitem><listitem><para>writer : string (Robert D. Siegel)</para></listitem><listitem><para>tvshowtitle : string (Heroes)</para></listitem><listitem><para>premiered : string (2005-03-04)</para></listitem><listitem><para>status : string (Continuing) - status of a TVshow</para></listitem><listitem><para>code : string (tt0110293) - IMDb code</para></listitem><listitem><para>aired : string (2008-12-07)</para></listitem><listitem><para>credits : string (Andy Kaufman) - writing credits</para></listitem><listitem><para>lastplayed : string (Y-m-d h:m:s = 2009-04-05 23:16:04)</para></listitem><listitem><para>album : string (The Joshua Tree)</para></listitem><listitem><para>artist : list ([&apos;U2&apos;])</para></listitem><listitem><para>votes : string (12345 votes)</para></listitem><listitem><para>trailer : string (/home/user/trailer.avi)</para></listitem><listitem><para>dateadded : string (Y-m-d h:m:s = 2009-04-05 23:16:04)</para></listitem><listitem><para>mediatype : string - &quot;video&quot;, &quot;movie&quot;, &quot;tvshow&quot;, &quot;season&quot;, &quot;episode&quot; or &quot;musicvideo&quot;</para></listitem></itemizedlist>
</para></listitem><listitem><para>Music Values:<itemizedlist>
<listitem><para>tracknumber : integer (8)</para></listitem><listitem><para>discnumber : integer (2)</para></listitem><listitem><para>duration : integer (245) - duration in seconds</para></listitem><listitem><para>year : integer (1998)</para></listitem><listitem><para>genre : string (Rock)</para></listitem><listitem><para>album : string (Pulse)</para></listitem><listitem><para>artist : string (Muse)</para></listitem><listitem><para>title : string (American Pie)</para></listitem><listitem><para>rating : string (3) - single character between 0 and 5</para></listitem><listitem><para>lyrics : string (On a dark desert highway...)</para></listitem><listitem><para>playcount : integer (2) - number of times this item has been played</para></listitem><listitem><para>lastplayed : string (Y-m-d h:m:s = 2009-04-05 23:16:04)</para></listitem></itemizedlist>
</para></listitem><listitem><para>Picture Values:<itemizedlist>
<listitem><para>title : string (In the last summer-1)</para></listitem><listitem><para>picturepath : string (/home/username/pictures/img001.jpg)</para></listitem><listitem><para>exif* : string (See CPictureInfoTag::TranslateString in PictureInfoTag.cpp for valid strings)</para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para><para>example:<linebreak/>
<itemizedlist>
<listitem><para>self.list.getSelectedItem().setInfo(&apos;video&apos;, { &apos;genre&apos;: &apos;Comedy&apos; })n<linebreak/>
</para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" line="250" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.cpp" bodystart="273" bodyend="526"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1ListItem_1ad5c6a4540a9037468418a47239f78451" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmcgui::ListItem::addStreamInfo</definition>
        <argsstring>(const char *cType, const Properties &amp;dictionary)</argsstring>
        <name>addStreamInfo</name>
        <param>
          <type>const char *</type>
          <declname>cType</declname>
        </param>
        <param>
          <type>const <ref refid="classXBMCAddon_1_1Dictionary" kindref="compound">Properties</ref> &amp;</type>
          <declname>dictionary</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>addStreamInfo(type, values) <ndash/> Add a stream with details.<linebreak/>
<linebreak/>
type : string - type of stream(video/audio/subtitle).<linebreak/>
values : dictionary - pairs of { label: value }.<linebreak/>
<itemizedlist>
<listitem><para>Video Values:<itemizedlist>
<listitem><para>codec : string (h264)</para></listitem><listitem><para>aspect : float (1.78)</para></listitem><listitem><para>width : integer (1280)</para></listitem><listitem><para>height : integer (720)</para></listitem><listitem><para>duration : integer (seconds)</para></listitem></itemizedlist>
</para></listitem><listitem><para>Audio Values:<itemizedlist>
<listitem><para>codec : string (dts)</para></listitem><listitem><para>language : string (en)</para></listitem><listitem><para>channels : integer (2)</para></listitem></itemizedlist>
</para></listitem><listitem><para>Subtitle Values:<itemizedlist>
<listitem><para>language : string (en)</para></listitem></itemizedlist>
</para></listitem></itemizedlist>
</para><para>example:<itemizedlist>
<listitem><para>self.list.getSelectedItem().addStreamInfo(&apos;video&apos;, { &apos;codec&apos;: &apos;h264&apos;, &apos;width&apos; : 1280 }) </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" line="274" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.cpp" bodystart="528" bodyend="585"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1ListItem_1ad99b8ae5f9de9844a3bdd852cbdff7ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmcgui::ListItem::addContextMenuItems</definition>
        <argsstring>(const std::vector&lt; Tuple&lt; String, String &gt; &gt; &amp;items, bool replaceItems=false)</argsstring>
        <name>addContextMenuItems</name>
        <param>
          <type>const std::vector&lt; <ref refid="classXBMCAddon_1_1Tuple" kindref="compound">Tuple</ref>&lt; String, String &gt; &gt; &amp;</type>
          <declname>items</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>replaceItems</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>addContextMenuItems([(label, action,)*], replaceItems) <ndash/> Adds item(s) to the context menu for media lists.<linebreak/>
<linebreak/>
items : list - [(label, action,)*] A list of tuples consisting of label and action pairs.<itemizedlist>
<listitem><para>label : string or unicode - item&apos;s label.</para></listitem><listitem><para>action : string or unicode - any built-in function to perform. replaceItems : [opt] bool - True=only your items will show/False=your items will be added to context menu(Default). <linebreak/>
<ref refid="classXBMCAddon_1_1List" kindref="compound">List</ref> of functions - <ulink url="http://kodi.wiki/view/List_of_Built_In_Functions">http://kodi.wiki/view/List_of_Built_In_Functions</ulink> <linebreak/>
<linebreak/>
*Note, You can use the above as keywords for arguments and skip certain optional arguments.<linebreak/>
 Once you use a keyword, all following arguments require the keyword.<linebreak/>
<linebreak/>
example:</para></listitem><listitem><para>listitem.addContextMenuItems([(&apos;Theater Showtimes&apos;, &apos;RunScript(special://home/scripts/showtimes/default.py,Iron Man)&apos;,)])n </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" line="292" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.cpp" bodystart="587" bodyend="610"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a721ed1e674e1fea198d5fa5400833001" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmcgui::ListItem::setProperty</definition>
        <argsstring>(const char *key, const String &amp;value)</argsstring>
        <name>setProperty</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>setProperty(key, value) <ndash/> Sets a listitem property, similar to an infolabel.<linebreak/>
<linebreak/>
key : string - property name.<linebreak/>
value : string or unicode - value of property.<linebreak/>
<linebreak/>
*Note, Key is NOT case sensitive.<linebreak/>
 You can use the above as keywords for arguments and skip certain optional arguments.<linebreak/>
 Once you use a keyword, all following arguments require the keyword.<linebreak/>
<linebreak/>
 Some of these are treated internally by XBMC, such as the &apos;StartOffset&apos; property, which is<linebreak/>
 the offset in seconds at which to start playback of an item. Others may be used in the skin<linebreak/>
 to add extra information, such as &apos;WatchedCount&apos; for tvshow items<linebreak/>
 example:<itemizedlist>
<listitem><para>self.list.getSelectedItem().setProperty(&apos;AspectRatio&apos;, &apos;1.85 : 1&apos;)</para></listitem><listitem><para>self.list.getSelectedItem().setProperty(&apos;StartOffset&apos;, &apos;256.4&apos;) </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" line="312" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.cpp" bodystart="173" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1ListItem_1ad08713603e1e8728cd63734bc5891070" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String XBMCAddon::xbmcgui::ListItem::getProperty</definition>
        <argsstring>(const char *key)</argsstring>
        <name>getProperty</name>
        <param>
          <type>const char *</type>
          <declname>key</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>getProperty(key) <ndash/> Returns a listitem property as a string, similar to an infolabel.<linebreak/>
<linebreak/>
key : string - property name.<linebreak/>
<linebreak/>
*Note, Key is NOT case sensitive.<linebreak/>
 You can use the above as keywords for arguments and skip certain optional arguments.<linebreak/>
 Once you use a keyword, all following arguments require the keyword.<linebreak/>
 example:<itemizedlist>
<listitem><para>AspectRatio = self.list.getSelectedItem().getProperty(&apos;AspectRatio&apos;) </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" line="326" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.cpp" bodystart="204" bodyend="225"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1ListItem_1af7feacf87c7f01af9e241d1070da10f1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmcgui::ListItem::setPath</definition>
        <argsstring>(const String &amp;path)</argsstring>
        <name>setPath</name>
        <param>
          <type>const String &amp;</type>
          <declname>path</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>setPath(path) <ndash/> Sets the listitem&apos;s path.<linebreak/>
<linebreak/>
path : string or unicode - path, activated when item is clicked.<linebreak/>
<linebreak/>
*Note, You can use the above as keywords for arguments.<linebreak/>
 example:<itemizedlist>
<listitem><para>self.list.getSelectedItem().setPath(path=&apos;ActivateWindow(Weather)&apos;) </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" line="338" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.cpp" bodystart="227" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a2da86c4897416439a14f606e85bc10f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmcgui::ListItem::setMimeType</definition>
        <argsstring>(const String &amp;mimetype)</argsstring>
        <name>setMimeType</name>
        <param>
          <type>const String &amp;</type>
          <declname>mimetype</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>setMimeType(mimetype) <ndash/> Sets the listitem&apos;s mimetype if known.<linebreak/>
<linebreak/>
mimetype : string or unicode - mimetype.<linebreak/>
<linebreak/>
If known prehand, this can (but does not have to) avoid HEAD requests being sent to HTTP servers to figure out file type.<linebreak/>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" line="348" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.cpp" bodystart="233" bodyend="237"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a79eb25621adaa09db232728233cf92d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmcgui::ListItem::setContentLookup</definition>
        <argsstring>(bool enable)</argsstring>
        <name>setContentLookup</name>
        <param>
          <type>bool</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>setContentLookup(enable) <ndash/> Enable or disable content lookup for item.</para><para>If disabled, HEAD requests to e.g determine mime type will not be sent.</para><para>enable : bool </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" line="357" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.cpp" bodystart="239" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1ListItem_1aa16bb865bac3438bad1f46d9734cbfaa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmcgui::ListItem::setSubtitles</definition>
        <argsstring>(const std::vector&lt; String &gt; &amp;subtitleFiles)</argsstring>
        <name>setSubtitles</name>
        <param>
          <type>const std::vector&lt; String &gt; &amp;</type>
          <declname>subtitleFiles</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1aa16bb865bac3438bad1f46d9734cbfaa" kindref="member">setSubtitles()</ref> <ndash/> Sets subtitles for this listitem.<linebreak/>
 example:<itemizedlist>
<listitem><para>listitem.setSubtitles([&apos;special://temp/example.srt&apos;, &apos;<ulink url="http://example.com/example.srt&apos;">http://example.com/example.srt&apos;</ulink>]) </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" line="365" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.cpp" bodystart="612" bodyend="621"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a9b2c004551016d5f3aad2db97f88e3e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String XBMCAddon::xbmcgui::ListItem::getdescription</definition>
        <argsstring>()</argsstring>
        <name>getdescription</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a9b2c004551016d5f3aad2db97f88e3e2" kindref="member">getdescription()</ref> <ndash/> Returns the description of this PlayListItem.<linebreak/>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" line="370" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.cpp" bodystart="245" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1ListItem_1abee751b5140549cd25e55a3d6d6a5b0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String XBMCAddon::xbmcgui::ListItem::getduration</definition>
        <argsstring>()</argsstring>
        <name>getduration</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1abee751b5140549cd25e55a3d6d6a5b0e" kindref="member">getduration()</ref> <ndash/> Returns the duration of this PlayListItem<linebreak/>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" line="375" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.cpp" bodystart="250" bodyend="266"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1ListItem_1ab3321f9b46d6b6b66f466ac2d8a2adf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String XBMCAddon::xbmcgui::ListItem::getfilename</definition>
        <argsstring>()</argsstring>
        <name>getfilename</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1ab3321f9b46d6b6b66f466ac2d8a2adf3" kindref="member">getfilename()</ref> <ndash/> Returns the filename of this PlayListItem.<linebreak/>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" line="380" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.cpp" bodystart="268" bodyend="271"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a9cffd261a1d39b65a713d64c0af53c9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classXBMCAddon_1_1xbmc_1_1InfoTagVideo" kindref="compound">xbmc::InfoTagVideo</ref> *</type>
        <definition>xbmc::InfoTagVideo * XBMCAddon::xbmcgui::ListItem::getVideoInfoTag</definition>
        <argsstring>()</argsstring>
        <name>getVideoInfoTag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a9cffd261a1d39b65a713d64c0af53c9d" kindref="member">getVideoInfoTag()</ref> <ndash/> returns the VideoInfoTag for this item. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" line="385" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.cpp" bodystart="623" bodyend="629"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1ListItem_1ace02146b8adcd58956abac0700a8b263" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="classXBMCAddon_1_1xbmc_1_1InfoTagMusic" kindref="compound">xbmc::InfoTagMusic</ref> *</type>
        <definition>xbmc::InfoTagMusic * XBMCAddon::xbmcgui::ListItem::getMusicInfoTag</definition>
        <argsstring>()</argsstring>
        <name>getMusicInfoTag</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1ace02146b8adcd58956abac0700a8b263" kindref="member">getMusicInfoTag()</ref> <ndash/> returns the MusicInfoTag for this item. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" line="390" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.cpp" bodystart="631" bodyend="637"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a3dcc3339497986459166c03e6a097bd6" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classXBMCAddon_1_1AddonClass_1_1Ref" kindref="compound">AddonClass::Ref</ref>&lt; <ref refid="classXBMCAddon_1_1xbmcgui_1_1ListItem" kindref="compound">ListItem</ref> &gt;</type>
        <definition>static AddonClass::Ref&lt;ListItem&gt; XBMCAddon::xbmcgui::ListItem::fromString</definition>
        <argsstring>(const String &amp;str)</argsstring>
        <name>fromString</name>
        <param>
          <type>const String &amp;</type>
          <declname>str</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" line="80" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" bodystart="80" bodyend="85"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>ListItem([label, label2, iconImage, thumbnailImage, path])<linebreak/>
<linebreak/>
label : [opt] string label2 : [opt] string iconImage : Deprecated. Use setArt thumbnailImage : Deprecated. Use setArt path : [opt] string </para>    </detaileddescription>
    <inheritancegraph>
      <node id="414">
        <label>XBMCAddon::AddonClass</label>
        <link refid="classXBMCAddon_1_1AddonClass"/>
        <childnode refid="415" relation="public-inheritance">
        </childnode>
      </node>
      <node id="413">
        <label>XBMCAddon::xbmcgui::ListItem</label>
        <link refid="classXBMCAddon_1_1xbmcgui_1_1ListItem"/>
        <childnode refid="414" relation="public-inheritance">
        </childnode>
      </node>
      <node id="415">
        <label>CCriticalSection</label>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="417">
        <label>XBMCAddon::AddonClass</label>
        <link refid="classXBMCAddon_1_1AddonClass"/>
        <childnode refid="418" relation="public-inheritance">
        </childnode>
        <childnode refid="419" relation="usage">
          <edgelabel>languageHook</edgelabel>
        </childnode>
      </node>
      <node id="416">
        <label>XBMCAddon::xbmcgui::ListItem</label>
        <link refid="classXBMCAddon_1_1xbmcgui_1_1ListItem"/>
        <childnode refid="417" relation="public-inheritance">
        </childnode>
      </node>
      <node id="418">
        <label>CCriticalSection</label>
      </node>
      <node id="419">
        <label>XBMCAddon::LanguageHook</label>
        <link refid="classXBMCAddon_1_1LanguageHook"/>
        <childnode refid="417" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" line="65" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/ListItem.h" bodystart="64" bodyend="391"/>
    <listofallmembers>
      <member refid="classXBMCAddon_1_1AddonClass_1ab70ccb0c1ca2f4099577e9ca59ae8f49" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>Acquire</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1ad99b8ae5f9de9844a3bdd852cbdff7ec" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>addContextMenuItems</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1a74bc7e400ada8647197d1575968f81d7" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>AddonClass</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1ad5c6a4540a9037468418a47239f78451" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>addStreamInfo</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1afd73e0ec1af35bf37e3e54971d23abd0" prot="protected" virt="virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>deallocating</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a3dcc3339497986459166c03e6a097bd6" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>fromString</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1a55737a3a6205d2692484e186f1cc46d5" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>GetClassname</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a9b2c004551016d5f3aad2db97f88e3e2" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>getdescription</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1abee751b5140549cd25e55a3d6d6a5b0e" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>getduration</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1ab3321f9b46d6b6b66f466ac2d8a2adf3" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>getfilename</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1ab4547bdd034353f97065364c7f630d0c" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>getLabel</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a92ce089328a670d985b76cf455760ae1" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>getLabel2</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1a42cb67038af10d4b53c2e7a13ee22591" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>GetLanguageHook</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1ace02146b8adcd58956abac0700a8b263" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>getMusicInfoTag</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1ae3c30a0f64241012499d1f4a6d5fdfe7" prot="protected" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>getNextClassIndex</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1ac87e43c43bf816d5341a2aebec8ccf81" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>getNumAddonClasses</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1ad08713603e1e8728cd63734bc5891070" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>getProperty</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a9cffd261a1d39b65a713d64c0af53c9d" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>getVideoInfoTag</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1a218a8226c7ef2f361af6671a5f25efd0" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>isDeallocating</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a9ad24c75f897563c30e29b703aa483a0" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>isSelected</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a0db07e3f57afef1779abb31b234cd398" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>item</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1aa71b56d06a92152c726833de1308405e" prot="protected" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>languageHook</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a74c1764c92146ff0656919334ae2825a" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>ListItem</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a41f23eda94371cedb8b48179784412b6" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>ListItem</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1a5c5ab8cbc38921ad05e9a853f1e52493" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>Release</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a3a43d35d83d82035344361c8db8bad18" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>select</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1accc35c58f91d385a292cd7053e1fca3b" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>setArt</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a79eb25621adaa09db232728233cf92d8" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>setContentLookup</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a30cfd4ff45973c8548fbfdab7789708f" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>setIconImage</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1acfb3092da8aa1858602464070f668b4e" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>setInfo</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a39b578b0d2bcaf3539ef51e818daa118" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>setLabel</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a9062cf9d34e22e05d6c0fe73b604dee0" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>setLabel2</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a2da86c4897416439a14f606e85bc10f6" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>setMimeType</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1af7feacf87c7f01af9e241d1070da10f1" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>setPath</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a721ed1e674e1fea198d5fa5400833001" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>setProperty</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1aa16bb865bac3438bad1f46d9734cbfaa" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>setSubtitles</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a39a5cbe9ce5d46a88538f2a190e96b8f" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>setThumbnailImage</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1ae27cdf6c5fab63f5d09e965e1573fce7" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>~AddonClass</name></member>
      <member refid="classXBMCAddon_1_1xbmcgui_1_1ListItem_1a3da249755c793457a791d01ed9ed899d" prot="public" virt="virtual"><scope>XBMCAddon::xbmcgui::ListItem</scope><name>~ListItem</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
