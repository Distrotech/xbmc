<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classXBMCAddon_1_1xbmc_1_1Monitor" kind="class" prot="public">
    <compoundname>XBMCAddon::xbmc::Monitor</compoundname>
    <basecompoundref refid="classXBMCAddon_1_1AddonCallback" prot="public" virt="non-virtual">XBMCAddon::AddonCallback</basecompoundref>
    <includes refid="Monitor_8h" local="no">Monitor.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classXBMCAddon_1_1xbmc_1_1Monitor_1a20f69fee3a0f3cea33473aea5c1a2eaf" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String XBMCAddon::xbmc::Monitor::Id</definition>
        <argsstring></argsstring>
        <name>Id</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" line="37" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classXBMCAddon_1_1xbmc_1_1Monitor_1a2e87a8b783b87e816c88e0dcca0b7857" prot="private" static="no" mutable="no">
        <type>CEvent</type>
        <definition>CEvent XBMCAddon::xbmc::Monitor::abortEvent</definition>
        <argsstring></argsstring>
        <name>abortEvent</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" line="38" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classXBMCAddon_1_1xbmc_1_1Monitor_1a3c9a59e3131585e7b88c1a95c961320d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>XBMCAddon::xbmc::Monitor::Monitor</definition>
        <argsstring>()</argsstring>
        <name>Monitor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" line="40" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.cpp" bodystart="29" bodyend="37"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmc_1_1Monitor_1aabe15bb12a07d878a3f7e7aa687be154" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmc::Monitor::OnSettingsChanged</definition>
        <argsstring>()</argsstring>
        <name>OnSettingsChanged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" line="43" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" bodystart="43" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmc_1_1Monitor_1a6410fc19a8b26c509b5d5b8d51066fc7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmc::Monitor::OnScreensaverActivated</definition>
        <argsstring>()</argsstring>
        <name>OnScreensaverActivated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" line="44" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" bodystart="44" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmc_1_1Monitor_1adab4061e457748d6d55bc02a9e47e106" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmc::Monitor::OnScreensaverDeactivated</definition>
        <argsstring>()</argsstring>
        <name>OnScreensaverDeactivated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" line="45" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" bodystart="45" bodyend="45"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmc_1_1Monitor_1aef854bce633483415213d0f68821975e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmc::Monitor::OnDPMSActivated</definition>
        <argsstring>()</argsstring>
        <name>OnDPMSActivated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" line="46" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmc_1_1Monitor_1ad425bf99a8d3f0b8cdd0f23750605c18" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmc::Monitor::OnDPMSDeactivated</definition>
        <argsstring>()</argsstring>
        <name>OnDPMSDeactivated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" line="47" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmc_1_1Monitor_1a6476054ce777879b9a246402c503aa98" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmc::Monitor::OnScanStarted</definition>
        <argsstring>(const String &amp;library)</argsstring>
        <name>OnScanStarted</name>
        <param>
          <type>const String &amp;</type>
          <declname>library</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" line="48" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" bodystart="48" bodyend="53"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmc_1_1Monitor_1a0e7f6a8d8ac5be420ceb5376d95b2eb5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmc::Monitor::OnScanFinished</definition>
        <argsstring>(const String &amp;library)</argsstring>
        <name>OnScanFinished</name>
        <param>
          <type>const String &amp;</type>
          <declname>library</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" line="54" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" bodystart="54" bodyend="59"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmc_1_1Monitor_1a60323c6ed761df36c0f7c31a639a1a94" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmc::Monitor::OnCleanStarted</definition>
        <argsstring>(const String &amp;library)</argsstring>
        <name>OnCleanStarted</name>
        <param>
          <type>const String &amp;</type>
          <declname>library</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" line="60" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" bodystart="60" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmc_1_1Monitor_1ae3577af278b5fed09c513c9c7e4fbcff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmc::Monitor::OnCleanFinished</definition>
        <argsstring>(const String &amp;library)</argsstring>
        <name>OnCleanFinished</name>
        <param>
          <type>const String &amp;</type>
          <declname>library</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" line="61" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" bodystart="61" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmc_1_1Monitor_1ae026787d0fce1b19519245cceb1d397a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmc::Monitor::OnNotification</definition>
        <argsstring>(const String &amp;sender, const String &amp;method, const String &amp;data)</argsstring>
        <name>OnNotification</name>
        <param>
          <type>const String &amp;</type>
          <declname>sender</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>method</declname>
        </param>
        <param>
          <type>const String &amp;</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" line="62" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" bodystart="62" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmc_1_1Monitor_1ad47cd83215b30bd830aad64f6db6cb1b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>const String &amp;</type>
        <definition>const String&amp; XBMCAddon::xbmc::Monitor::GetId</definition>
        <argsstring>()</argsstring>
        <name>GetId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" line="64" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmc_1_1Monitor_1a2a6be8c9450242f587f6b544b35b5e5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void XBMCAddon::xbmc::Monitor::OnAbortRequested</definition>
        <argsstring>()</argsstring>
        <name>OnAbortRequested</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" line="66" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.cpp" bodystart="39" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmc_1_1Monitor_1a4a1b533f5d4b6ce6ef114ebbb8882347" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmc::Monitor::onSettingsChanged</definition>
        <argsstring>()</argsstring>
        <name>onSettingsChanged</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classXBMCAddon_1_1xbmc_1_1Monitor_1a4a1b533f5d4b6ce6ef114ebbb8882347" kindref="member">onSettingsChanged()</ref> <ndash/> onSettingsChanged method.<linebreak/>
<linebreak/>
Will be called when addon settings are changed<linebreak/>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" line="74" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" bodystart="74" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmc_1_1Monitor_1a2ee80f0044e05f3e498d333454644de4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmc::Monitor::onScreensaverActivated</definition>
        <argsstring>()</argsstring>
        <name>onScreensaverActivated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classXBMCAddon_1_1xbmc_1_1Monitor_1a2ee80f0044e05f3e498d333454644de4" kindref="member">onScreensaverActivated()</ref> <ndash/> onScreensaverActivated method.<linebreak/>
<linebreak/>
Will be called when screensaver kicks in<linebreak/>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" line="81" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmc_1_1Monitor_1a28518626e8dd4ac7e9137642efba4e12" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmc::Monitor::onScreensaverDeactivated</definition>
        <argsstring>()</argsstring>
        <name>onScreensaverDeactivated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classXBMCAddon_1_1xbmc_1_1Monitor_1a28518626e8dd4ac7e9137642efba4e12" kindref="member">onScreensaverDeactivated()</ref> <ndash/> onScreensaverDeactivated method.<linebreak/>
<linebreak/>
Will be called when screensaver goes off<linebreak/>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" line="88" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" bodystart="88" bodyend="88"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmc_1_1Monitor_1a3b4b456c20663ab8ace67da538776047" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmc::Monitor::onDPMSActivated</definition>
        <argsstring>()</argsstring>
        <name>onDPMSActivated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classXBMCAddon_1_1xbmc_1_1Monitor_1a3b4b456c20663ab8ace67da538776047" kindref="member">onDPMSActivated()</ref> <ndash/> onDPMSActivated method.<linebreak/>
<linebreak/>
Will be called when energysaving/DPMS gets active<linebreak/>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" line="95" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" bodystart="95" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmc_1_1Monitor_1a8c6973b6b79f61be21733804e420a1b8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmc::Monitor::onDPMSDeactivated</definition>
        <argsstring>()</argsstring>
        <name>onDPMSDeactivated</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classXBMCAddon_1_1xbmc_1_1Monitor_1a8c6973b6b79f61be21733804e420a1b8" kindref="member">onDPMSDeactivated()</ref> <ndash/> onDPMSDeactivated method.<linebreak/>
<linebreak/>
Will be called when energysaving/DPMS is turned off<linebreak/>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" line="102" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" bodystart="102" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmc_1_1Monitor_1ad20205df942152e0184a41a3d215f7fc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmc::Monitor::onScanStarted</definition>
        <argsstring>(const String library)</argsstring>
        <name>onScanStarted</name>
        <param>
          <type>const String</type>
          <declname>library</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>onScanStarted(library) <ndash/> onScanStarted method.<linebreak/>
<linebreak/>
 library : video/music as string<linebreak/>
<linebreak/>
 Will be called when library scan has started and return video or music to indicate which library is being scanned<linebreak/>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" line="111" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" bodystart="111" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmc_1_1Monitor_1ab12c6ba87ee1ed4c95612efb3404a3d1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmc::Monitor::onScanFinished</definition>
        <argsstring>(const String library)</argsstring>
        <name>onScanFinished</name>
        <param>
          <type>const String</type>
          <declname>library</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>onScanFinished(library) <ndash/> onScanFinished method.<linebreak/>
<linebreak/>
library : video/music as string<linebreak/>
<linebreak/>
Will be called when library scan has ended and return video or music to indicate which library has been scanned<linebreak/>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" line="120" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" bodystart="120" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmc_1_1Monitor_1a5e6d5a601271ef6e05e0489fe63d1522" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmc::Monitor::onDatabaseScanStarted</definition>
        <argsstring>(const String database)</argsstring>
        <name>onDatabaseScanStarted</name>
        <param>
          <type>const String</type>
          <declname>database</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>onDatabaseScanStarted(database) <ndash/> Deprecated, use <ref refid="classXBMCAddon_1_1xbmc_1_1Monitor_1ad20205df942152e0184a41a3d215f7fc" kindref="member">onScanStarted()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" line="125" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" bodystart="125" bodyend="125"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmc_1_1Monitor_1aa63bd4cbcd475d268d6dcc3a9a45b208" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmc::Monitor::onDatabaseUpdated</definition>
        <argsstring>(const String database)</argsstring>
        <name>onDatabaseUpdated</name>
        <param>
          <type>const String</type>
          <declname>database</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>onDatabaseUpdated(database) <ndash/> Deprecated, use <ref refid="classXBMCAddon_1_1xbmc_1_1Monitor_1ab12c6ba87ee1ed4c95612efb3404a3d1" kindref="member">onScanFinished()</ref>. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" line="130" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" bodystart="130" bodyend="130"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmc_1_1Monitor_1a7bfc0c8d83b5c9fb054af2980bf2e0cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmc::Monitor::onCleanStarted</definition>
        <argsstring>(const String library)</argsstring>
        <name>onCleanStarted</name>
        <param>
          <type>const String</type>
          <declname>library</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>onCleanStarted(library) <ndash/> onCleanStarted method.<linebreak/>
<linebreak/>
library : video/music as string<linebreak/>
<linebreak/>
Will be called when library clean has started and return video or music to indicate which library is being cleaned<linebreak/>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" line="139" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" bodystart="139" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmc_1_1Monitor_1ab55ef0905afe2c1254c44ccb24548371" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmc::Monitor::onCleanFinished</definition>
        <argsstring>(const String library)</argsstring>
        <name>onCleanFinished</name>
        <param>
          <type>const String</type>
          <declname>library</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>onCleanFinished(library) <ndash/> onCleanFinished method.<linebreak/>
<linebreak/>
library : video/music as string<linebreak/>
<linebreak/>
Will be called when library clean has ended and return video or music to indicate which library has been cleaned<linebreak/>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" line="148" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" bodystart="148" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmc_1_1Monitor_1a4337b3a6e652ee8bdc14266a4c0277e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmc::Monitor::onAbortRequested</definition>
        <argsstring>()</argsstring>
        <name>onAbortRequested</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classXBMCAddon_1_1xbmc_1_1Monitor_1a4337b3a6e652ee8bdc14266a4c0277e8" kindref="member">onAbortRequested()</ref> <ndash/> Deprecated, use <ref refid="classXBMCAddon_1_1xbmc_1_1Monitor_1a277f77772857471823d8c5ccc9eb7514" kindref="member">waitForAbort()</ref> to be notified about this event.<linebreak/>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" line="153" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" bodystart="153" bodyend="153"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmc_1_1Monitor_1a1062028b4b8529340f500e0f24e41802" prot="public" static="no" const="no" explicit="no" inline="yes" virt="virtual">
        <type>void</type>
        <definition>virtual void XBMCAddon::xbmc::Monitor::onNotification</definition>
        <argsstring>(const String sender, const String method, const String data)</argsstring>
        <name>onNotification</name>
        <param>
          <type>const String</type>
          <declname>sender</declname>
        </param>
        <param>
          <type>const String</type>
          <declname>method</declname>
        </param>
        <param>
          <type>const String</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>onNotification(sender, method, data) <ndash/> onNotification method.<linebreak/>
<linebreak/>
 sender : sender of the notification<linebreak/>
 method : name of the notification<linebreak/>
 data : JSON-encoded data of the notification<linebreak/>
<linebreak/>
 Will be called when Kodi receives or sends a notification<linebreak/>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" line="164" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" bodystart="164" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmc_1_1Monitor_1a277f77772857471823d8c5ccc9eb7514" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool XBMCAddon::xbmc::Monitor::waitForAbort</definition>
        <argsstring>(double timeout=-1)</argsstring>
        <name>waitForAbort</name>
        <param>
          <type>double</type>
          <declname>timeout</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>waitForAbort([timeout]) <ndash/> Block until abort is requested, or until timeout occurs. If an abort requested have already been made, return immediately.</para><para>Returns True when abort have been requested, False if a timeout is given and the operation times out.</para><para>timeout : [opt] float - timeout in seconds. Default: no timeout.<linebreak/>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" line="174" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.cpp" bodystart="46" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmc_1_1Monitor_1a4a47a6cbe70306c8f84815c82b79f1af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool XBMCAddon::xbmc::Monitor::abortRequested</definition>
        <argsstring>()</argsstring>
        <name>abortRequested</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classXBMCAddon_1_1xbmc_1_1Monitor_1a4a47a6cbe70306c8f84815c82b79f1af" kindref="member">abortRequested()</ref> <ndash/> Returns True if abort has been requested. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" line="179" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.cpp" bodystart="65" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1xbmc_1_1Monitor_1ad2b707bb99d0917d9c44696ab800f927" prot="public" static="no" const="no" explicit="no" inline="no" virt="virtual">
        <type></type>
        <definition>XBMCAddon::xbmc::Monitor::~Monitor</definition>
        <argsstring>()</argsstring>
        <name>~Monitor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" line="181" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.cpp" bodystart="71" bodyend="82"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classXBMCAddon_1_1xbmc_1_1Monitor" kindref="compound">Monitor</ref> class.</para><para>Monitor() <ndash/> Creates a new <ref refid="classXBMCAddon_1_1xbmc_1_1Monitor" kindref="compound">Monitor</ref> to notify addon about changes. </para>    </detaileddescription>
    <inheritancegraph>
      <node id="416">
        <label>XBMCAddon::AddonClass</label>
        <link refid="classXBMCAddon_1_1AddonClass"/>
        <childnode refid="417" relation="public-inheritance">
        </childnode>
      </node>
      <node id="414">
        <label>XBMCAddon::xbmc::Monitor</label>
        <link refid="classXBMCAddon_1_1xbmc_1_1Monitor"/>
        <childnode refid="415" relation="public-inheritance">
        </childnode>
      </node>
      <node id="417">
        <label>CCriticalSection</label>
      </node>
      <node id="415">
        <label>XBMCAddon::AddonCallback</label>
        <link refid="classXBMCAddon_1_1AddonCallback"/>
        <childnode refid="416" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="420">
        <label>XBMCAddon::AddonClass</label>
        <link refid="classXBMCAddon_1_1AddonClass"/>
        <childnode refid="421" relation="public-inheritance">
        </childnode>
        <childnode refid="422" relation="usage">
          <edgelabel>languageHook</edgelabel>
        </childnode>
      </node>
      <node id="423">
        <label>XBMCAddon::AddonClass::Ref&lt; XBMCAddon::CallbackHandler &gt;</label>
        <link refid="classXBMCAddon_1_1AddonClass_1_1Ref"/>
      </node>
      <node id="418">
        <label>XBMCAddon::xbmc::Monitor</label>
        <link refid="classXBMCAddon_1_1xbmc_1_1Monitor"/>
        <childnode refid="419" relation="public-inheritance">
        </childnode>
      </node>
      <node id="421">
        <label>CCriticalSection</label>
      </node>
      <node id="422">
        <label>XBMCAddon::LanguageHook</label>
        <link refid="classXBMCAddon_1_1LanguageHook"/>
        <childnode refid="420" relation="public-inheritance">
        </childnode>
      </node>
      <node id="419">
        <label>XBMCAddon::AddonCallback</label>
        <link refid="classXBMCAddon_1_1AddonCallback"/>
        <childnode refid="420" relation="public-inheritance">
        </childnode>
        <childnode refid="423" relation="usage">
          <edgelabel>handler</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" line="36" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/Monitor.h" bodystart="35" bodyend="182"/>
    <listofallmembers>
      <member refid="classXBMCAddon_1_1xbmc_1_1Monitor_1a2e87a8b783b87e816c88e0dcca0b7857" prot="private" virt="non-virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>abortEvent</name></member>
      <member refid="classXBMCAddon_1_1xbmc_1_1Monitor_1a4a47a6cbe70306c8f84815c82b79f1af" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>abortRequested</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1ab70ccb0c1ca2f4099577e9ca59ae8f49" prot="public" virt="virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>Acquire</name></member>
      <member refid="classXBMCAddon_1_1AddonCallback_1af8df138f0052acf6a7eaf5fd08db5e1c" prot="protected" virt="non-virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>AddonCallback</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1a74bc7e400ada8647197d1575968f81d7" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>AddonClass</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1afd73e0ec1af35bf37e3e54971d23abd0" prot="protected" virt="virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>deallocating</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1a55737a3a6205d2692484e186f1cc46d5" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>GetClassname</name></member>
      <member refid="classXBMCAddon_1_1xbmc_1_1Monitor_1ad47cd83215b30bd830aad64f6db6cb1b" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>GetId</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1a42cb67038af10d4b53c2e7a13ee22591" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>GetLanguageHook</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1ae3c30a0f64241012499d1f4a6d5fdfe7" prot="protected" virt="non-virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>getNextClassIndex</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1ac87e43c43bf816d5341a2aebec8ccf81" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>getNumAddonClasses</name></member>
      <member refid="classXBMCAddon_1_1AddonCallback_1ad4fc1fc86c9c648108acccfd6ad15f94" prot="protected" virt="non-virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>handler</name></member>
      <member refid="classXBMCAddon_1_1AddonCallback_1a8edad836d7559ad1536469c68be57254" prot="protected" virt="non-virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>hasHandler</name></member>
      <member refid="classXBMCAddon_1_1xbmc_1_1Monitor_1a20f69fee3a0f3cea33473aea5c1a2eaf" prot="private" virt="non-virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>Id</name></member>
      <member refid="classXBMCAddon_1_1AddonCallback_1a6891140d172d754c95d2412cfbc7b211" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>invokeCallback</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1a218a8226c7ef2f361af6671a5f25efd0" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>isDeallocating</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1aa71b56d06a92152c726833de1308405e" prot="protected" virt="non-virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>languageHook</name></member>
      <member refid="classXBMCAddon_1_1xbmc_1_1Monitor_1a3c9a59e3131585e7b88c1a95c961320d" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>Monitor</name></member>
      <member refid="classXBMCAddon_1_1xbmc_1_1Monitor_1a4337b3a6e652ee8bdc14266a4c0277e8" prot="public" virt="virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>onAbortRequested</name></member>
      <member refid="classXBMCAddon_1_1xbmc_1_1Monitor_1a2a6be8c9450242f587f6b544b35b5e5e" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>OnAbortRequested</name></member>
      <member refid="classXBMCAddon_1_1xbmc_1_1Monitor_1ae3577af278b5fed09c513c9c7e4fbcff" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>OnCleanFinished</name></member>
      <member refid="classXBMCAddon_1_1xbmc_1_1Monitor_1ab55ef0905afe2c1254c44ccb24548371" prot="public" virt="virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>onCleanFinished</name></member>
      <member refid="classXBMCAddon_1_1xbmc_1_1Monitor_1a60323c6ed761df36c0f7c31a639a1a94" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>OnCleanStarted</name></member>
      <member refid="classXBMCAddon_1_1xbmc_1_1Monitor_1a7bfc0c8d83b5c9fb054af2980bf2e0cf" prot="public" virt="virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>onCleanStarted</name></member>
      <member refid="classXBMCAddon_1_1xbmc_1_1Monitor_1a5e6d5a601271ef6e05e0489fe63d1522" prot="public" virt="virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>onDatabaseScanStarted</name></member>
      <member refid="classXBMCAddon_1_1xbmc_1_1Monitor_1aa63bd4cbcd475d268d6dcc3a9a45b208" prot="public" virt="virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>onDatabaseUpdated</name></member>
      <member refid="classXBMCAddon_1_1xbmc_1_1Monitor_1a3b4b456c20663ab8ace67da538776047" prot="public" virt="virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>onDPMSActivated</name></member>
      <member refid="classXBMCAddon_1_1xbmc_1_1Monitor_1aef854bce633483415213d0f68821975e" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>OnDPMSActivated</name></member>
      <member refid="classXBMCAddon_1_1xbmc_1_1Monitor_1a8c6973b6b79f61be21733804e420a1b8" prot="public" virt="virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>onDPMSDeactivated</name></member>
      <member refid="classXBMCAddon_1_1xbmc_1_1Monitor_1ad425bf99a8d3f0b8cdd0f23750605c18" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>OnDPMSDeactivated</name></member>
      <member refid="classXBMCAddon_1_1xbmc_1_1Monitor_1ae026787d0fce1b19519245cceb1d397a" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>OnNotification</name></member>
      <member refid="classXBMCAddon_1_1xbmc_1_1Monitor_1a1062028b4b8529340f500e0f24e41802" prot="public" virt="virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>onNotification</name></member>
      <member refid="classXBMCAddon_1_1xbmc_1_1Monitor_1ab12c6ba87ee1ed4c95612efb3404a3d1" prot="public" virt="virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>onScanFinished</name></member>
      <member refid="classXBMCAddon_1_1xbmc_1_1Monitor_1a0e7f6a8d8ac5be420ceb5376d95b2eb5" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>OnScanFinished</name></member>
      <member refid="classXBMCAddon_1_1xbmc_1_1Monitor_1a6476054ce777879b9a246402c503aa98" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>OnScanStarted</name></member>
      <member refid="classXBMCAddon_1_1xbmc_1_1Monitor_1ad20205df942152e0184a41a3d215f7fc" prot="public" virt="virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>onScanStarted</name></member>
      <member refid="classXBMCAddon_1_1xbmc_1_1Monitor_1a2ee80f0044e05f3e498d333454644de4" prot="public" virt="virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>onScreensaverActivated</name></member>
      <member refid="classXBMCAddon_1_1xbmc_1_1Monitor_1a6410fc19a8b26c509b5d5b8d51066fc7" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>OnScreensaverActivated</name></member>
      <member refid="classXBMCAddon_1_1xbmc_1_1Monitor_1adab4061e457748d6d55bc02a9e47e106" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>OnScreensaverDeactivated</name></member>
      <member refid="classXBMCAddon_1_1xbmc_1_1Monitor_1a28518626e8dd4ac7e9137642efba4e12" prot="public" virt="virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>onScreensaverDeactivated</name></member>
      <member refid="classXBMCAddon_1_1xbmc_1_1Monitor_1a4a1b533f5d4b6ce6ef114ebbb8882347" prot="public" virt="virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>onSettingsChanged</name></member>
      <member refid="classXBMCAddon_1_1xbmc_1_1Monitor_1aabe15bb12a07d878a3f7e7aa687be154" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>OnSettingsChanged</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1a5c5ab8cbc38921ad05e9a853f1e52493" prot="public" virt="virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>Release</name></member>
      <member refid="classXBMCAddon_1_1AddonCallback_1a863529cf2b2849d2ce2f86737cd2826d" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>setHandler</name></member>
      <member refid="classXBMCAddon_1_1xbmc_1_1Monitor_1a277f77772857471823d8c5ccc9eb7514" prot="public" virt="non-virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>waitForAbort</name></member>
      <member refid="classXBMCAddon_1_1AddonCallback_1a5f55e978e7785c907d7f30ec08f37324" prot="public" virt="virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>~AddonCallback</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1ae27cdf6c5fab63f5d09e965e1573fce7" prot="public" virt="virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>~AddonClass</name></member>
      <member refid="classXBMCAddon_1_1xbmc_1_1Monitor_1ad2b707bb99d0917d9c44696ab800f927" prot="public" virt="virtual"><scope>XBMCAddon::xbmc::Monitor</scope><name>~Monitor</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
