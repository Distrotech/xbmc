<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="CallbackFunction_8h" kind="file">
    <compoundname>CallbackFunction.h</compoundname>
    <innerclass refid="classXBMCAddon_1_1Callback" prot="public">XBMCAddon::Callback</innerclass>
    <innerclass refid="structXBMCAddon_1_1cb__null__type" prot="public">XBMCAddon::cb_null_type</innerclass>
    <innerclass refid="classXBMCAddon_1_1CallbackFunction" prot="public">XBMCAddon::CallbackFunction</innerclass>
    <innerclass refid="classXBMCAddon_1_1CallbackFunction_3_01M_00_01cb__null__type_00_01cb__null__type_00_01cb__null__50be70f50824efae8e98316de92b03e0" prot="public">XBMCAddon::CallbackFunction&lt; M, cb_null_type, cb_null_type, cb_null_type, cb_null_type, cb_null_type &gt;</innerclass>
    <innerclass refid="classXBMCAddon_1_1CallbackFunction_3_01M_00_01P1_00_01cb__null__type_00_01cb__null__type_00_01cb58cdce7686d6c3bfd8224ef116555755" prot="public">XBMCAddon::CallbackFunction&lt; M, P1, cb_null_type, cb_null_type, cb_null_type, cb_null_type &gt;</innerclass>
    <innerclass refid="classXBMCAddon_1_1CallbackFunction_3_01M_00_01AddonClass_1_1Ref_3_01P1_01_4_00_01cb__null__type_cea2675cc112c7c3f12b441c83b73b96" prot="public">XBMCAddon::CallbackFunction&lt; M, AddonClass::Ref&lt; P1 &gt;, cb_null_type, cb_null_type, cb_null_type, cb_null_type &gt;</innerclass>
    <innerclass refid="classXBMCAddon_1_1CallbackFunction_3_01M_00_01P1_00_01P2_00_01cb__null__type_00_01cb__null__type_00_01cb__null__type_01_4" prot="public">XBMCAddon::CallbackFunction&lt; M, P1, P2, cb_null_type, cb_null_type, cb_null_type &gt;</innerclass>
    <innerclass refid="classXBMCAddon_1_1CallbackFunction_3_01M_00_01P1_00_01P2_00_01P3_00_01cb__null__type_00_01cb__null__type_01_4" prot="public">XBMCAddon::CallbackFunction&lt; M, P1, P2, P3, cb_null_type, cb_null_type &gt;</innerclass>
    <innernamespace refid="namespaceXBMCAddon">XBMCAddon</innernamespace>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2005-2013<sp/>Team<sp/>XBMC</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/>http://xbmc.org</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>Program<sp/>is<sp/>free<sp/>software;<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation;<sp/>either<sp/>version<sp/>2,<sp/>or<sp/>(at<sp/>your<sp/>option)</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*<sp/><sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/>*<sp/><sp/>This<sp/>Program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/>*<sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/>*<sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/>See<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/>*<sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/>*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/>*<sp/><sp/>along<sp/>with<sp/>XBMC;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/><sp/>If<sp/>not,<sp/>see</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/><sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>once</highlight></codeline>
<codeline lineno="22"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;AddonClass.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">XBMCAddon</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="37" refid="classXBMCAddon_1_1Callback" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classXBMCAddon_1_1Callback" kindref="compound">Callback</ref><sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classXBMCAddon_1_1AddonClass" kindref="compound">AddonClass</ref><sp/></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classXBMCAddon_1_1AddonClass" kindref="compound">AddonClass</ref>*<sp/>addonClassObject;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classXBMCAddon_1_1Callback" kindref="compound">Callback</ref>(<ref refid="classXBMCAddon_1_1AddonClass" kindref="compound">AddonClass</ref>*<sp/>_object)<sp/>:<sp/>addonClassObject(_object)<sp/>{<sp/>XBMC_TRACE;<sp/>}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>executeCallback()<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classXBMCAddon_1_1Callback" kindref="compound">Callback</ref>();</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classXBMCAddon_1_1AddonClass" kindref="compound">AddonClass</ref>*<sp/>getObject()<sp/>{<sp/>XBMC_TRACE;<sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>addonClassObject;<sp/>}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="structXBMCAddon_1_1cb__null__type" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structXBMCAddon_1_1cb__null__type" kindref="compound">cb_null_type</ref><sp/>{};</highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">//<sp/>stub<sp/>type<sp/>template<sp/>to<sp/>be<sp/>partial<sp/>specialized</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>M<sp/>=<sp/><ref refid="structXBMCAddon_1_1cb__null__type" kindref="compound">cb_null_type</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T1<sp/>=<sp/><ref refid="structXBMCAddon_1_1cb__null__type" kindref="compound">cb_null_type</ref>,<sp/></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T2<sp/>=<sp/><ref refid="structXBMCAddon_1_1cb__null__type" kindref="compound">cb_null_type</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T3<sp/>=<sp/><ref refid="structXBMCAddon_1_1cb__null__type" kindref="compound">cb_null_type</ref>,<sp/></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>T4<sp/>=<sp/><ref refid="structXBMCAddon_1_1cb__null__type" kindref="compound">cb_null_type</ref>,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>Extraneous<sp/>=<sp/><ref refid="structXBMCAddon_1_1cb__null__type" kindref="compound">cb_null_type</ref>&gt;<sp/></highlight></codeline>
<codeline lineno="56" refid="classXBMCAddon_1_1CallbackFunction" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classXBMCAddon_1_1CallbackFunction" kindref="compound">CallbackFunction</ref><sp/>{};</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/></highlight></codeline>
<codeline lineno="62" refid="classXBMCAddon_1_1CallbackFunction_3_01M_00_01cb__null__type_00_01cb__null__type_00_01cb__null__50be70f50824efae8e98316de92b03e0" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>M&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classXBMCAddon_1_1CallbackFunction" kindref="compound">CallbackFunction</ref>&lt;M,<sp/><ref refid="structXBMCAddon_1_1cb__null__type" kindref="compound">cb_null_type</ref>,<sp/><ref refid="structXBMCAddon_1_1cb__null__type" kindref="compound">cb_null_type</ref>,<sp/><ref refid="structXBMCAddon_1_1cb__null__type" kindref="compound">cb_null_type</ref>,<sp/><ref refid="structXBMCAddon_1_1cb__null__type" kindref="compound">cb_null_type</ref>,<sp/><ref refid="structXBMCAddon_1_1cb__null__type" kindref="compound">cb_null_type</ref>&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classXBMCAddon_1_1Callback" kindref="compound">Callback</ref></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(M::*MemberFunction)();</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>MemberFunction<sp/>meth;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>M*<sp/>obj;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classXBMCAddon_1_1CallbackFunction" kindref="compound">CallbackFunction</ref>(M*<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>MemberFunction<sp/>method)<sp/>:<sp/></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classXBMCAddon_1_1Callback" kindref="compound">Callback</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">),<sp/>meth(method),<sp/>obj(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">)<sp/>{<sp/>XBMC_TRACE;<sp/>}</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classXBMCAddon_1_1CallbackFunction" kindref="compound">CallbackFunction</ref>()<sp/>{<sp/>XBMC_TRACE;<sp/>deallocating();<sp/>}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>executeCallback()<sp/>{<sp/>XBMC_TRACE;<sp/>((*obj).*(meth))();<sp/>}</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="classXBMCAddon_1_1CallbackFunction_3_01M_00_01P1_00_01cb__null__type_00_01cb__null__type_00_01cb58cdce7686d6c3bfd8224ef116555755" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>M,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classXBMCAddon_1_1CallbackFunction" kindref="compound">CallbackFunction</ref>&lt;M,P1,<sp/><ref refid="structXBMCAddon_1_1cb__null__type" kindref="compound">cb_null_type</ref>,<sp/><ref refid="structXBMCAddon_1_1cb__null__type" kindref="compound">cb_null_type</ref>,<sp/><ref refid="structXBMCAddon_1_1cb__null__type" kindref="compound">cb_null_type</ref>,<sp/><ref refid="structXBMCAddon_1_1cb__null__type" kindref="compound">cb_null_type</ref>&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classXBMCAddon_1_1Callback" kindref="compound">Callback</ref></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(M::*MemberFunction)(P1);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/>MemberFunction<sp/>meth;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>M*<sp/>obj;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>P1<sp/>param;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classXBMCAddon_1_1CallbackFunction" kindref="compound">CallbackFunction</ref>(M*<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>MemberFunction<sp/>method,<sp/>P1<sp/>parameter)<sp/>:<sp/></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classXBMCAddon_1_1Callback" kindref="compound">Callback</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">),<sp/>meth(method),<sp/>obj(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>param(parameter)<sp/>{<sp/>XBMC_TRACE;<sp/>}</highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classXBMCAddon_1_1CallbackFunction" kindref="compound">CallbackFunction</ref>()<sp/>{<sp/>XBMC_TRACE;<sp/>deallocating();<sp/>}</highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>executeCallback()<sp/>{<sp/>XBMC_TRACE;<sp/>((*obj).*(meth))(param);<sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="classXBMCAddon_1_1CallbackFunction_3_01M_00_01AddonClass_1_1Ref_3_01P1_01_4_00_01cb__null__type_cea2675cc112c7c3f12b441c83b73b96" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>M,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classXBMCAddon_1_1CallbackFunction" kindref="compound">CallbackFunction</ref>&lt;M,<ref refid="classXBMCAddon_1_1AddonClass" kindref="compound">AddonClass</ref>::<ref refid="classXBMCAddon_1_1AddonClass_1_1Ref" kindref="compound">Ref</ref>&lt;P1&gt;,<sp/><ref refid="structXBMCAddon_1_1cb__null__type" kindref="compound">cb_null_type</ref>,<sp/><ref refid="structXBMCAddon_1_1cb__null__type" kindref="compound">cb_null_type</ref>,<sp/><ref refid="structXBMCAddon_1_1cb__null__type" kindref="compound">cb_null_type</ref>,<sp/><ref refid="structXBMCAddon_1_1cb__null__type" kindref="compound">cb_null_type</ref>&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classXBMCAddon_1_1Callback" kindref="compound">Callback</ref></highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(M::*MemberFunction)(P1*);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/>MemberFunction<sp/>meth;</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/>M*<sp/>obj;</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classXBMCAddon_1_1AddonClass_1_1Ref" kindref="compound">AddonClass::Ref&lt;P1&gt;</ref><sp/>param;</highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classXBMCAddon_1_1CallbackFunction" kindref="compound">CallbackFunction</ref>(M*<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>MemberFunction<sp/>method,<sp/>P1*<sp/>parameter)<sp/>:<sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classXBMCAddon_1_1Callback" kindref="compound">Callback</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">),<sp/>meth(method),<sp/>obj(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>param(parameter)<sp/>{<sp/>XBMC_TRACE;<sp/>}</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classXBMCAddon_1_1CallbackFunction" kindref="compound">CallbackFunction</ref>()<sp/>{<sp/>XBMC_TRACE;<sp/>deallocating();<sp/>}</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>executeCallback()<sp/>{<sp/>XBMC_TRACE;<sp/>((*obj).*(meth))(param);<sp/>}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="134" refid="classXBMCAddon_1_1CallbackFunction_3_01M_00_01P1_00_01P2_00_01cb__null__type_00_01cb__null__type_00_01cb__null__type_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>M,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classXBMCAddon_1_1CallbackFunction" kindref="compound">CallbackFunction</ref>&lt;M,P1,P2,<sp/><ref refid="structXBMCAddon_1_1cb__null__type" kindref="compound">cb_null_type</ref>,<sp/><ref refid="structXBMCAddon_1_1cb__null__type" kindref="compound">cb_null_type</ref>,<sp/><ref refid="structXBMCAddon_1_1cb__null__type" kindref="compound">cb_null_type</ref>&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classXBMCAddon_1_1Callback" kindref="compound">Callback</ref></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/>{<sp/></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="137"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(M::*MemberFunction)(P1,P2);</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/>MemberFunction<sp/>meth;</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>M*<sp/>obj;</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>P1<sp/>param1;</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/>P2<sp/>param2;</highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classXBMCAddon_1_1CallbackFunction" kindref="compound">CallbackFunction</ref>(M*<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>MemberFunction<sp/>method,<sp/>P1<sp/>parameter,<sp/>P2<sp/>parameter2)<sp/>:<sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classXBMCAddon_1_1Callback" kindref="compound">Callback</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">),<sp/>meth(method),<sp/>obj(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>param1(parameter),<sp/>param2(parameter2)<sp/>{<sp/>XBMC_TRACE;<sp/>}</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classXBMCAddon_1_1CallbackFunction" kindref="compound">CallbackFunction</ref>()<sp/>{<sp/>XBMC_TRACE;<sp/>deallocating();<sp/>}</highlight></codeline>
<codeline lineno="151"><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>executeCallback()<sp/>{<sp/>XBMC_TRACE;<sp/>((*obj).*(meth))(param1,param2);<sp/>}</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight></codeline>
<codeline lineno="160" refid="classXBMCAddon_1_1CallbackFunction_3_01M_00_01P1_00_01P2_00_01P3_00_01cb__null__type_00_01cb__null__type_01_4" refkind="compound"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">template</highlight><highlight class="normal">&lt;</highlight><highlight class="keyword">class</highlight><highlight class="normal"><sp/>M,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P1,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P2,<sp/></highlight><highlight class="keyword">typename</highlight><highlight class="normal"><sp/>P3&gt;<sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="classXBMCAddon_1_1CallbackFunction" kindref="compound">CallbackFunction</ref>&lt;M,P1,P2,P3,<sp/><ref refid="structXBMCAddon_1_1cb__null__type" kindref="compound">cb_null_type</ref>,<sp/><ref refid="structXBMCAddon_1_1cb__null__type" kindref="compound">cb_null_type</ref>&gt;<sp/>:<sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal"><sp/><ref refid="classXBMCAddon_1_1Callback" kindref="compound">Callback</ref></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/>{</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(M::*MemberFunction)(P1,P2,P3);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">protected</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/>MemberFunction<sp/>meth;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/>M*<sp/>obj;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/>P1<sp/>param1;</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/>P2<sp/>param2;</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/>P3<sp/>param3;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classXBMCAddon_1_1CallbackFunction" kindref="compound">CallbackFunction</ref>(M*<sp/></highlight><highlight class="keywordtype">object</highlight><highlight class="normal">,<sp/>MemberFunction<sp/>method,<sp/>P1<sp/>parameter,<sp/>P2<sp/>parameter2,<sp/>P3<sp/>parameter3)<sp/>:<sp/></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classXBMCAddon_1_1Callback" kindref="compound">Callback</ref>(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">),<sp/>meth(method),<sp/>obj(</highlight><highlight class="keywordtype">object</highlight><highlight class="normal">),</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>param1(parameter),<sp/>param2(parameter2),<sp/>param3(parameter3)<sp/>{<sp/>XBMC_TRACE;<sp/>}</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/>~<ref refid="classXBMCAddon_1_1CallbackFunction" kindref="compound">CallbackFunction</ref>()<sp/>{<sp/>XBMC_TRACE;<sp/>deallocating();<sp/>}</highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">virtual</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>executeCallback()<sp/>{<sp/>XBMC_TRACE;<sp/>((*obj).*(meth))(param1,param2,param3);<sp/>}</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/>};</highlight></codeline>
<codeline lineno="181"><highlight class="normal">}</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/CallbackFunction.h"/>
  </compounddef>
</doxygen>
