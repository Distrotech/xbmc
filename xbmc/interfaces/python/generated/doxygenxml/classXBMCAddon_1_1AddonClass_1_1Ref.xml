<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classXBMCAddon_1_1AddonClass_1_1Ref" kind="class" prot="public">
    <compoundname>XBMCAddon::AddonClass::Ref</compoundname>
    <includes refid="AddonClass_8h" local="no">AddonClass.h</includes>
    <templateparamlist>
      <param>
        <type>class</type>
        <declname>T</declname>
        <defname>T</defname>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classXBMCAddon_1_1AddonClass_1_1Ref_1aa367e556160ea8223fca4751e18edbbb" prot="private" static="no" mutable="no">
        <type>T *</type>
        <definition>T* XBMCAddon::AddonClass::Ref&lt; T &gt;::ac</definition>
        <argsstring></argsstring>
        <name>ac</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" line="163" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" bodystart="163" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classXBMCAddon_1_1AddonClass_1_1Ref_1af07400ccb00022d311eff8e21bd1a635" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>XBMCAddon::AddonClass::Ref&lt; T &gt;::Ref</definition>
        <argsstring>()</argsstring>
        <name>Ref</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" line="165" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" bodystart="165" bodyend="165"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1AddonClass_1_1Ref_1ac871e78d8d04327139f0c7f6ae3252f5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>XBMCAddon::AddonClass::Ref&lt; T &gt;::Ref</definition>
        <argsstring>(const T *_ac)</argsstring>
        <name>Ref</name>
        <param>
          <type>const T *</type>
          <declname>_ac</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" line="166" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" bodystart="166" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1AddonClass_1_1Ref_1a54c32f75950b8e034581e738bb935217" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>XBMCAddon::AddonClass::Ref&lt; T &gt;::Ref</definition>
        <argsstring>(Ref&lt; T &gt; const &amp;oref)</argsstring>
        <name>Ref</name>
        <param>
          <type><ref refid="classXBMCAddon_1_1AddonClass_1_1Ref" kindref="compound">Ref</ref>&lt; T &gt; const &amp;</type>
          <declname>oref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" line="169" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" bodystart="169" bodyend="169"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1AddonClass_1_1Ref_1a5226016b1245515165509f4ecffe844e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class O</type>
          </param>
        </templateparamlist>
        <type></type>
        <definition>XBMCAddon::AddonClass::Ref&lt; T &gt;::Ref</definition>
        <argsstring>(Ref&lt; O &gt; const &amp;oref)</argsstring>
        <name>Ref</name>
        <param>
          <type><ref refid="classXBMCAddon_1_1AddonClass_1_1Ref" kindref="compound">Ref</ref>&lt; O &gt; const &amp;</type>
          <declname>oref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" line="170" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" bodystart="170" bodyend="170"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1AddonClass_1_1Ref_1af417e11a8a1b4ed8fb0b046dd28e0261" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classXBMCAddon_1_1AddonClass_1_1Ref" kindref="compound">Ref</ref>&lt; T &gt; &amp;</type>
        <definition>Ref&lt;T&gt;&amp; XBMCAddon::AddonClass::Ref&lt; T &gt;::operator=</definition>
        <argsstring>(Ref&lt; T &gt; const &amp;oref)</argsstring>
        <name>operator=</name>
        <param>
          <type><ref refid="classXBMCAddon_1_1AddonClass_1_1Ref" kindref="compound">Ref</ref>&lt; T &gt; const &amp;</type>
          <declname>oref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>operator= should work with either another smart pointer or a pointer since it will be able to convert a pointer to a smart pointer using one of the above constuctors.</para><para>Note: There is a trick here. The temporary variable is necessary because otherwise the following code will fail:</para><para>Ref&lt;T&gt; ptr = new T; ptr = ptr;</para><para>What happens without the tmp is the dereference is called first so the object ends up deleted and then the reference happens on a deleted object. The order is reversed in the following.</para><para>Note: Operator= is ambiguous if you define both an operator=(Ref&lt;T&gt;&amp;) and an operator=(T*). I&apos;m opting for the route the boost took here figuring it has more history behind it. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" line="189" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" bodystart="189" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1AddonClass_1_1Ref_1ab32c0da6d6157f84452a3d840f985cc5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* XBMCAddon::AddonClass::Ref&lt; T &gt;::operator-&gt;</definition>
        <argsstring>() const </argsstring>
        <name>operator-&gt;</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" line="192" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" bodystart="192" bodyend="192"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1AddonClass_1_1Ref_1a63d981a966d0212d633c22c1847fe39d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>XBMCAddon::AddonClass::Ref&lt; T &gt;::operator T *</definition>
        <argsstring>() const </argsstring>
        <name>operator T *</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>This operator doubles as the value in a boolean expression. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" line="197" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" bodystart="197" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1AddonClass_1_1Ref_1a417bbf47859e65d5dc98dcc13005e5e0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T *</type>
        <definition>T* XBMCAddon::AddonClass::Ref&lt; T &gt;::get</definition>
        <argsstring>() const </argsstring>
        <name>get</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" line="198" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" bodystart="198" bodyend="198"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1AddonClass_1_1Ref_1a9c3a3e8a311fd97a3ebe1359c6018cbe" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>T &amp;</type>
        <definition>T&amp; XBMCAddon::AddonClass::Ref&lt; T &gt;::getRef</definition>
        <argsstring>() const </argsstring>
        <name>getRef</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" line="199" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" bodystart="199" bodyend="199"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1AddonClass_1_1Ref_1a07c8e38c1026bf4c451c2f52966d34ca" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>XBMCAddon::AddonClass::Ref&lt; T &gt;::~Ref</definition>
        <argsstring>()</argsstring>
        <name>~Ref</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" line="201" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" bodystart="201" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1AddonClass_1_1Ref_1a95e05d2bb99e9c9392d23a1c71a01262" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool XBMCAddon::AddonClass::Ref&lt; T &gt;::isNull</definition>
        <argsstring>() const </argsstring>
        <name>isNull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" line="202" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" bodystart="202" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1AddonClass_1_1Ref_1ae853823c42ca9e7a77a04ffaa0f52276" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool XBMCAddon::AddonClass::Ref&lt; T &gt;::isNotNull</definition>
        <argsstring>() const </argsstring>
        <name>isNotNull</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" line="203" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" bodystart="203" bodyend="203"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1AddonClass_1_1Ref_1a2c5d6311a1d7714516e261f85d5719df" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool XBMCAddon::AddonClass::Ref&lt; T &gt;::isSet</definition>
        <argsstring>() const </argsstring>
        <name>isSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" line="204" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" bodystart="204" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1AddonClass_1_1Ref_1a567224665079cf6a70c4d45b171e4dd7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool XBMCAddon::AddonClass::Ref&lt; T &gt;::operator!</definition>
        <argsstring>() const </argsstring>
        <name>operator!</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" line="205" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" bodystart="205" bodyend="205"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1AddonClass_1_1Ref_1aaf8e6c7931413a2c4dda1521014b9574" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool XBMCAddon::AddonClass::Ref&lt; T &gt;::operator==</definition>
        <argsstring>(const AddonClass::Ref&lt; T &gt; &amp;oref) const </argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classXBMCAddon_1_1AddonClass_1_1Ref" kindref="compound">AddonClass::Ref</ref>&lt; T &gt; &amp;</type>
          <declname>oref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" line="206" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" bodystart="206" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1AddonClass_1_1Ref_1a8e84e49b2b886b865c63caa150ddaeac" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool XBMCAddon::AddonClass::Ref&lt; T &gt;::operator&lt;</definition>
        <argsstring>(const AddonClass::Ref&lt; T &gt; &amp;oref) const </argsstring>
        <name>operator&lt;</name>
        <param>
          <type>const <ref refid="classXBMCAddon_1_1AddonClass_1_1Ref" kindref="compound">AddonClass::Ref</ref>&lt; T &gt; &amp;</type>
          <declname>oref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" line="207" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" bodystart="207" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1AddonClass_1_1Ref_1aacc53735f1f08f2ae10449cb7b42ca3a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class O</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void XBMCAddon::AddonClass::Ref&lt; T &gt;::reset</definition>
        <argsstring>(Ref&lt; O &gt; const &amp;oref)</argsstring>
        <name>reset</name>
        <param>
          <type><ref refid="classXBMCAddon_1_1AddonClass_1_1Ref" kindref="compound">Ref</ref>&lt; O &gt; const &amp;</type>
          <declname>oref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" line="210" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" bodystart="210" bodyend="210"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1AddonClass_1_1Ref_1a0a0cb47d857223b4c4ea1626b500718b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>class O</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void XBMCAddon::AddonClass::Ref&lt; T &gt;::reset</definition>
        <argsstring>(O *oref)</argsstring>
        <name>reset</name>
        <param>
          <type>O *</type>
          <declname>oref</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" line="211" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" bodystart="211" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classXBMCAddon_1_1AddonClass_1_1Ref_1a208d5a257f3c020839234b906ace02ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void XBMCAddon::AddonClass::Ref&lt; T &gt;::reset</definition>
        <argsstring>()</argsstring>
        <name>reset</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" line="212" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" bodystart="212" bodyend="212"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para>This class is a smart pointer for a Referenced class. </para>    </detaileddescription>
    <location file="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" line="162" column="1" bodyfile="/root/git-working/xbmc/xbmc/interfaces/legacy/AddonClass.h" bodystart="161" bodyend="213"/>
    <listofallmembers>
      <member refid="classXBMCAddon_1_1AddonClass_1_1Ref_1aa367e556160ea8223fca4751e18edbbb" prot="private" virt="non-virtual"><scope>XBMCAddon::AddonClass::Ref</scope><name>ac</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1_1Ref_1a417bbf47859e65d5dc98dcc13005e5e0" prot="public" virt="non-virtual"><scope>XBMCAddon::AddonClass::Ref</scope><name>get</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1_1Ref_1a9c3a3e8a311fd97a3ebe1359c6018cbe" prot="public" virt="non-virtual"><scope>XBMCAddon::AddonClass::Ref</scope><name>getRef</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1_1Ref_1ae853823c42ca9e7a77a04ffaa0f52276" prot="public" virt="non-virtual"><scope>XBMCAddon::AddonClass::Ref</scope><name>isNotNull</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1_1Ref_1a95e05d2bb99e9c9392d23a1c71a01262" prot="public" virt="non-virtual"><scope>XBMCAddon::AddonClass::Ref</scope><name>isNull</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1_1Ref_1a2c5d6311a1d7714516e261f85d5719df" prot="public" virt="non-virtual"><scope>XBMCAddon::AddonClass::Ref</scope><name>isSet</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1_1Ref_1a63d981a966d0212d633c22c1847fe39d" prot="public" virt="non-virtual"><scope>XBMCAddon::AddonClass::Ref</scope><name>operator T *</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1_1Ref_1a567224665079cf6a70c4d45b171e4dd7" prot="public" virt="non-virtual"><scope>XBMCAddon::AddonClass::Ref</scope><name>operator!</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1_1Ref_1ab32c0da6d6157f84452a3d840f985cc5" prot="public" virt="non-virtual"><scope>XBMCAddon::AddonClass::Ref</scope><name>operator-&gt;</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1_1Ref_1a8e84e49b2b886b865c63caa150ddaeac" prot="public" virt="non-virtual"><scope>XBMCAddon::AddonClass::Ref</scope><name>operator&lt;</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1_1Ref_1af417e11a8a1b4ed8fb0b046dd28e0261" prot="public" virt="non-virtual"><scope>XBMCAddon::AddonClass::Ref</scope><name>operator=</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1_1Ref_1aaf8e6c7931413a2c4dda1521014b9574" prot="public" virt="non-virtual"><scope>XBMCAddon::AddonClass::Ref</scope><name>operator==</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1_1Ref_1af07400ccb00022d311eff8e21bd1a635" prot="public" virt="non-virtual"><scope>XBMCAddon::AddonClass::Ref</scope><name>Ref</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1_1Ref_1ac871e78d8d04327139f0c7f6ae3252f5" prot="public" virt="non-virtual"><scope>XBMCAddon::AddonClass::Ref</scope><name>Ref</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1_1Ref_1a54c32f75950b8e034581e738bb935217" prot="public" virt="non-virtual"><scope>XBMCAddon::AddonClass::Ref</scope><name>Ref</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1_1Ref_1a5226016b1245515165509f4ecffe844e" prot="public" virt="non-virtual"><scope>XBMCAddon::AddonClass::Ref</scope><name>Ref</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1_1Ref_1aacc53735f1f08f2ae10449cb7b42ca3a" prot="public" virt="non-virtual"><scope>XBMCAddon::AddonClass::Ref</scope><name>reset</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1_1Ref_1a0a0cb47d857223b4c4ea1626b500718b" prot="public" virt="non-virtual"><scope>XBMCAddon::AddonClass::Ref</scope><name>reset</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1_1Ref_1a208d5a257f3c020839234b906ace02ec" prot="public" virt="non-virtual"><scope>XBMCAddon::AddonClass::Ref</scope><name>reset</name></member>
      <member refid="classXBMCAddon_1_1AddonClass_1_1Ref_1a07c8e38c1026bf4c451c2f52966d34ca" prot="public" virt="non-virtual"><scope>XBMCAddon::AddonClass::Ref</scope><name>~Ref</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
